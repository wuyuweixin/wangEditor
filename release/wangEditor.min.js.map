{"version":3,"sources":["wangEditor.js"],"names":["global","factory","exports","module","define","amd","wangEditor","this","createElemByHTML","html","div","document","createElement","innerHTML","children","isDOMList","selector","HTMLCollection","NodeList","querySelectorAll","result","objForEach","obj","fn","key","hasOwnProperty","call","arrForEach","fakeArr","i","item","length","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","replace","isFunction","List","editor","_this","$elem","$","type","_active","droplist","DropList","width","$title","list","value","onClick","_command","getPasteText","e","clipboardData","originalEvent","pasteText","window","getData","getPasteHtml","filterStyle","ignoreImg","pasteHtml","docSplitHtml","split","getPasteImgs","items","test","push","getAsFile","getChildrenJSON","childNodes","forEach","curElem","elemResult","nodeType","textContent","tag","nodeName","toLowerCase","attrData","attrList","attributes","attrListLength","attr","name","attrs","_typeof","Symbol","iterator","constructor","prototype","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","eventList","DomElement","selectorResult","Array","trim","indexOf","elem","deep","cloneList","cloneNode","index","get","types","addEventListener","matches","removeEventListener","val","getAttribute","setAttribute","className","arr","filter","join","currentStyle","style","styleArr","resultArr","map","css","$children","child","appendChild","remove","parent","parentElement","removeChild","$child","contains","getBoundingClientRect","focus","_currentElem","results","parentUntil","$referenceNode","referenceNode","parentNode","insertBefore","lastChild","nextSibling","offAll","config","menus","fontNames","colors","emotions","title","content","alt","src","zIndex","debug","linkCheck","text","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","isIE","Bold","_","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","queryCommandState","addClass","removeClass","replaceLang","str","langArgs","reg","_emptyFn","menu","opt","$container","titleHtml","append","$list","elemHtml","$li","on","hideTimeoutId","setTimeout","hide","_rendered","_show","clearTimeout","$menuELem","show","menuHeight","getSizeData","height","showTimeoutId","Head","$selectionElem","getSelectionContainerElem","$textElem","equal","cmdValue","queryCommandValue","FontSize","FontName","fontName","emptyFn","_isCreatedPanelMenus","Panel","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","find","$inputs","_hideOtherPanels","panel","Link","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","alert","$selectionELem","getNodeName","Italic","Redo","StrikeThrough","Underline","Undo","$parent","insertAfter","tryChangeActive","Justify","ForeColor","color","BackColor","Quote","$targetELem","Code","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","Emoticon","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","Table","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","_getLocationData","trData","$currentTr","tdData","newTr","tdIndex","$currentTd","newTd","$table","Video","textValId","Image","imgMenuId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","$file","fileElem","click","fileList","$linkUrl","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","Menus","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","Text","initSelection","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","changeActive","off","insertEmptyP","$p","pHandle","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","keyCode","txtHtml","canDo","now","Date","flag","pasteTime","resetTime","ex","pasteFiles","img","dataTransfer","Command","_useStyleWithCSS","execCommand","_name","_execCommand","change","range","insertNode","deleteContents","pasteHTML","API","_currentRange","_range","getSelection","rangeCount","getRangeAt","$containerElem","isContain","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","progress","timeoutId","_hide","UploadImg","alertInfo","debugInfo","customAlert","Error","onload","callback","onerror","_alert","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","id","customConfig","assign","langConfig","lang","RegExp","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","init","txt","newLine","$last","last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","_initConfig","_initDom","_initCommand","_initSelectionAPI","_initText","_initMenus","_initUploadImg","varArgs","to","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName"],"mappings":"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","file":"wangEditor.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\r\n    poly-fill\r\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n/*\r\n    DOM 操作 API\r\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    return selector instanceof HTMLCollection || selector instanceof NodeList;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\nvar DomElement = function () {\n    function DomElement(selector) {\n        classCallCheck(this, DomElement);\n\n        if (!selector) {\n            return;\n        }\n\n        // selector 本来就是 DomElement 对象，直接返回\n        if (selector instanceof DomElement) {\n            return selector;\n        }\n\n        this.selector = selector;\n        var nodeType = selector.nodeType;\n\n        // 根据 selector 得出的结果（如 DOM，DOM List）\n        var selectorResult = [];\n        if (nodeType === 9) {\n            // document 节点\n            selectorResult = [selector];\n        } else if (nodeType === 1) {\n            // 单个 DOM 节点\n            selectorResult = [selector];\n        } else if (isDOMList(selector) || selector instanceof Array) {\n            // DOM List 或者数组\n            selectorResult = selector;\n        } else if (typeof selector === 'string') {\n            // 字符串\n            selector = selector.replace('/\\n/mg', '').trim();\n            if (selector.indexOf('<') === 0) {\n                // 如 <div>\n                selectorResult = createElemByHTML(selector);\n            } else {\n                // 如 #id .class\n                selectorResult = querySelectorAll(selector);\n            }\n        }\n\n        var length = selectorResult.length;\n        if (!length) {\n            // 空数组\n            return this;\n        }\n\n        // 加入 DOM 节点\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            this[i] = selectorResult[i];\n        }\n        this.length = length;\n    }\n\n    // 类数组，forEach\n\n\n    createClass(DomElement, [{\n        key: 'forEach',\n        value: function forEach(fn) {\n            var i = void 0;\n            for (i = 0; i < this.length; i++) {\n                var elem = this[i];\n                var result = fn.call(elem, elem, i);\n                if (result === false) {\n                    break;\n                }\n            }\n            return this;\n        }\n\n        // clone\n\n    }, {\n        key: 'clone',\n        value: function clone(deep) {\n            var cloneList = [];\n            this.forEach(function (elem) {\n                cloneList.push(elem.cloneNode(!!deep));\n            });\n            return $(cloneList);\n        }\n\n        // 获取第几个元素\n\n    }, {\n        key: 'get',\n        value: function get$$1(index) {\n            var length = this.length;\n            if (index >= length) {\n                index = index % length;\n            }\n            return $(this[index]);\n        }\n\n        // 第一个\n\n    }, {\n        key: 'first',\n        value: function first() {\n            return this.get(0);\n        }\n\n        // 最后一个\n\n    }, {\n        key: 'last',\n        value: function last() {\n            var length = this.length;\n            return this.get(length - 1);\n        }\n\n        // 绑定事件\n\n    }, {\n        key: 'on',\n        value: function on(type, selector, fn) {\n            // selector 不为空，证明绑定事件要加代理\n            if (!fn) {\n                fn = selector;\n                selector = null;\n            }\n\n            // type 是否有多个\n            var types = [];\n            types = type.split(/\\s+/);\n\n            return this.forEach(function (elem) {\n                types.forEach(function (type) {\n                    if (!type) {\n                        return;\n                    }\n\n                    // 记录下，方便后面解绑\n                    eventList.push({\n                        elem: elem,\n                        type: type,\n                        fn: fn\n                    });\n\n                    if (!selector) {\n                        // 无代理\n                        elem.addEventListener(type, fn);\n                        return;\n                    }\n\n                    // 有代理\n                    elem.addEventListener(type, function (e) {\n                        var target = e.target;\n                        if (target.matches(selector)) {\n                            fn.call(target, e);\n                        }\n                    });\n                });\n            });\n        }\n\n        // 取消事件绑定\n\n    }, {\n        key: 'off',\n        value: function off(type, fn) {\n            return this.forEach(function (elem) {\n                elem.removeEventListener(type, fn);\n            });\n        }\n\n        // 获取/设置 属性\n\n    }, {\n        key: 'attr',\n        value: function attr(key, val) {\n            if (val == null) {\n                // 获取值\n                return this[0].getAttribute(key);\n            } else {\n                // 设置值\n                return this.forEach(function (elem) {\n                    elem.setAttribute(key, val);\n                });\n            }\n        }\n\n        // 添加 class\n\n    }, {\n        key: 'addClass',\n        value: function addClass(className) {\n            if (!className) {\n                return this;\n            }\n            return this.forEach(function (elem) {\n                var arr = void 0;\n                if (elem.className) {\n                    // 解析当前 className 转换为数组\n                    arr = elem.className.split(/\\s/);\n                    arr = arr.filter(function (item) {\n                        return !!item.trim();\n                    });\n                    // 添加 class\n                    if (arr.indexOf(className) < 0) {\n                        arr.push(className);\n                    }\n                    // 修改 elem.class\n                    elem.className = arr.join(' ');\n                } else {\n                    elem.className = className;\n                }\n            });\n        }\n\n        // 删除 class\n\n    }, {\n        key: 'removeClass',\n        value: function removeClass(className) {\n            if (!className) {\n                return this;\n            }\n            return this.forEach(function (elem) {\n                var arr = void 0;\n                if (elem.className) {\n                    // 解析当前 className 转换为数组\n                    arr = elem.className.split(/\\s/);\n                    arr = arr.filter(function (item) {\n                        item = item.trim();\n                        // 删除 class\n                        return !(!item || item === className);\n                    });\n                    // 修改 elem.class\n                    elem.className = arr.join(' ');\n                }\n            });\n        }\n\n        // 修改 css\n\n    }, {\n        key: 'css',\n        value: function css(key, val) {\n            var currentStyle = key + ':' + val + ';';\n            return this.forEach(function (elem) {\n                var style = (elem.getAttribute('style') || '').trim();\n                var styleArr = void 0,\n                    resultArr = [];\n                if (style) {\n                    // 将 style 按照 ; 拆分为数组\n                    styleArr = style.split(';');\n                    styleArr.forEach(function (item) {\n                        // 对每项样式，按照 : 拆分为 key 和 value\n                        var arr = item.split(':').map(function (i) {\n                            return i.trim();\n                        });\n                        if (arr.length === 2) {\n                            resultArr.push(arr[0] + ':' + arr[1]);\n                        }\n                    });\n                    // 替换或者新增\n                    resultArr = resultArr.map(function (item) {\n                        if (item.indexOf(key) === 0) {\n                            return currentStyle;\n                        } else {\n                            return item;\n                        }\n                    });\n                    if (resultArr.indexOf(currentStyle) < 0) {\n                        resultArr.push(currentStyle);\n                    }\n                    // 结果\n                    elem.setAttribute('style', resultArr.join('; '));\n                } else {\n                    // style 无值\n                    elem.setAttribute('style', currentStyle);\n                }\n            });\n        }\n\n        // 显示\n\n    }, {\n        key: 'show',\n        value: function show() {\n            return this.css('display', 'block');\n        }\n\n        // 隐藏\n\n    }, {\n        key: 'hide',\n        value: function hide() {\n            return this.css('display', 'none');\n        }\n\n        // 获取子节点\n\n    }, {\n        key: 'children',\n        value: function children() {\n            var elem = this[0];\n            if (!elem) {\n                return null;\n            }\n\n            return $(elem.children);\n        }\n\n        // 获取子节点（包括文本节点）\n\n    }, {\n        key: 'childNodes',\n        value: function childNodes() {\n            var elem = this[0];\n            if (!elem) {\n                return null;\n            }\n\n            return $(elem.childNodes);\n        }\n\n        // 增加子节点\n\n    }, {\n        key: 'append',\n        value: function append($children) {\n            return this.forEach(function (elem) {\n                $children.forEach(function (child) {\n                    elem.appendChild(child);\n                });\n            });\n        }\n\n        // 移除当前节点\n\n    }, {\n        key: 'remove',\n        value: function remove() {\n            return this.forEach(function (elem) {\n                if (elem.remove) {\n                    elem.remove();\n                } else {\n                    var parent = elem.parentElement;\n                    parent && parent.removeChild(elem);\n                }\n            });\n        }\n\n        // 是否包含某个子节点\n\n    }, {\n        key: 'isContain',\n        value: function isContain($child) {\n            var elem = this[0];\n            var child = $child[0];\n            return elem.contains(child);\n        }\n\n        // 尺寸数据\n\n    }, {\n        key: 'getSizeData',\n        value: function getSizeData() {\n            var elem = this[0];\n            return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n        }\n\n        // 封装 nodeName\n\n    }, {\n        key: 'getNodeName',\n        value: function getNodeName() {\n            var elem = this[0];\n            return elem.nodeName;\n        }\n\n        // 从当前元素查找\n\n    }, {\n        key: 'find',\n        value: function find(selector) {\n            var elem = this[0];\n            return $(elem.querySelectorAll(selector));\n        }\n\n        // 获取当前元素的 text\n\n    }, {\n        key: 'text',\n        value: function text(val) {\n            if (!val) {\n                // 获取 text\n                var elem = this[0];\n                return elem.innerHTML.replace(/<.*?>/g, function () {\n                    return '';\n                });\n            } else {\n                // 设置 text\n                return this.forEach(function (elem) {\n                    elem.innerHTML = val;\n                });\n            }\n        }\n\n        // 获取 html\n\n    }, {\n        key: 'html',\n        value: function html(value) {\n            var elem = this[0];\n            if (value == null) {\n                return elem.innerHTML;\n            } else {\n                elem.innerHTML = value;\n                return this;\n            }\n        }\n\n        // 获取 value\n\n    }, {\n        key: 'val',\n        value: function val() {\n            var elem = this[0];\n            return elem.value.trim();\n        }\n\n        // focus\n\n    }, {\n        key: 'focus',\n        value: function focus() {\n            return this.forEach(function (elem) {\n                elem.focus();\n            });\n        }\n\n        // parent\n\n    }, {\n        key: 'parent',\n        value: function parent() {\n            var elem = this[0];\n            return $(elem.parentElement);\n        }\n\n        // parentUntil 找到符合 selector 的父节点\n\n    }, {\n        key: 'parentUntil',\n        value: function parentUntil(selector, _currentElem) {\n            var results = document.querySelectorAll(selector);\n            var length = results.length;\n            if (!length) {\n                // 传入的 selector 无效\n                return null;\n            }\n\n            var elem = _currentElem || this[0];\n            if (elem.nodeName === 'BODY') {\n                return null;\n            }\n\n            var parent = elem.parentElement;\n            var i = void 0;\n            for (i = 0; i < length; i++) {\n                if (parent === results[i]) {\n                    // 找到，并返回\n                    return $(parent);\n                }\n            }\n\n            // 继续查找\n            return this.parentUntil(selector, parent);\n        }\n\n        // 判断两个 elem 是否相等\n\n    }, {\n        key: 'equal',\n        value: function equal($elem) {\n            if ($elem.nodeType === 1) {\n                return this[0] === $elem;\n            } else {\n                return this[0] === $elem[0];\n            }\n        }\n\n        // 将该元素插入到某个元素前面\n\n    }, {\n        key: 'insertBefore',\n        value: function insertBefore(selector) {\n            var $referenceNode = $(selector);\n            var referenceNode = $referenceNode[0];\n            if (!referenceNode) {\n                return this;\n            }\n            return this.forEach(function (elem) {\n                var parent = referenceNode.parentNode;\n                parent.insertBefore(elem, referenceNode);\n            });\n        }\n\n        // 将该元素插入到某个元素后面\n\n    }, {\n        key: 'insertAfter',\n        value: function insertAfter(selector) {\n            var $referenceNode = $(selector);\n            var referenceNode = $referenceNode[0];\n            if (!referenceNode) {\n                return this;\n            }\n            return this.forEach(function (elem) {\n                var parent = referenceNode.parentNode;\n                if (parent.lastChild === referenceNode) {\n                    // 最后一个元素\n                    parent.appendChild(elem);\n                } else {\n                    // 不是最后一个元素\n                    parent.insertBefore(elem, referenceNode.nextSibling);\n                }\n            });\n        }\n    }]);\n    return DomElement;\n}();\n\nvar $ = function $(selector) {\n    return new DomElement(selector);\n};\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\r\n    配置信息\r\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n    // 上传图片自定义提示方法\n    // customAlert: function (info) {\n    //     // 自定义上传提示\n    // },\n\n    // // 自定义上传图片\n    // customUploadImg: function (files, insert) {\n    //     // files 是 input 中选中的文件列表\n    //     // insert 是获取图片 url 后，插入到编辑器的方法\n    //     insert(imgUrl)\n    // }\n};\n\n/*\r\n    工具\r\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n\n    // 遍历对象\n};function objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n/*\r\n    bold-menu\r\n*/\n// 构造函数\n\nvar Bold = function () {\n    function Bold(editor) {\n        classCallCheck(this, Bold);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    // 点击事件\n\n\n    createClass(Bold, [{\n        key: 'onClick',\n        value: function onClick(_) {\n            // 点击菜单将触发这里\n            var editor = this.editor;\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n            if (isSeleEmpty) {\n                // 选区是空的，插入并选中一个“空白”\n                editor.selection.createEmptyRange();\n            }\n\n            // 执行 bold 命令\n            editor.cmd.do('bold');\n\n            if (isSeleEmpty) {\n                // 需要将选取折叠起来\n                editor.selection.collapseRange();\n                editor.selection.restoreSelection();\n            }\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(_) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            if (editor.cmd.queryCommandState('bold')) {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    }]);\n    return Bold;\n}();\n\n/*\r\n    替换多语言\r\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\r\n    droplist\r\n*/\nvar _emptyFn = function _emptyFn() {};\n\nvar DropList = function () {\n    function DropList(menu, opt) {\n        var _this = this;\n\n        classCallCheck(this, DropList);\n\n        // droplist 所依附的菜单\n        var editor = menu.editor;\n        this.menu = menu;\n        this.opt = opt;\n        // 容器\n        var $container = $('<div class=\"w-e-droplist\"></div>');\n\n        // 标题\n        var $title = opt.$title;\n        var titleHtml = void 0;\n        if ($title) {\n            // 替换多语言\n            titleHtml = $title.html();\n            titleHtml = replaceLang(editor, titleHtml);\n            $title.html(titleHtml);\n\n            $title.addClass('w-e-dp-title');\n            $container.append($title);\n        }\n\n        var list = opt.list || [];\n        var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n        var onClick = opt.onClick || _emptyFn;\n\n        // 加入 DOM 并绑定事件\n        var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n        $container.append($list);\n        list.forEach(function (item) {\n            var $elem = item.$elem;\n\n            // 替换多语言\n            var elemHtml = $elem.html();\n            elemHtml = replaceLang(editor, elemHtml);\n            $elem.html(elemHtml);\n\n            var value = item.value;\n            var $li = $('<li class=\"w-e-item\"></li>');\n            if ($elem) {\n                $li.append($elem);\n                $list.append($li);\n                $li.on('click', function (_) {\n                    onClick(value);\n\n                    // 隐藏\n                    _this.hideTimeoutId = setTimeout(function () {\n                        _this.hide();\n                    }, 0);\n                });\n            }\n        });\n\n        // 绑定隐藏事件\n        $container.on('mouseleave', function (_) {\n            _this.hideTimeoutId = setTimeout(function () {\n                _this.hide();\n            }, 0);\n        });\n\n        // 记录属性\n        this.$container = $container;\n\n        // 基本属性\n        this._rendered = false;\n        this._show = false;\n    }\n\n    // 显示（插入DOM）\n\n\n    createClass(DropList, [{\n        key: 'show',\n        value: function show() {\n            if (this.hideTimeoutId) {\n                // 清除之前的定时隐藏\n                clearTimeout(this.hideTimeoutId);\n            }\n\n            var menu = this.menu;\n            var $menuELem = menu.$elem;\n            var $container = this.$container;\n            if (this._show) {\n                return;\n            }\n            if (this._rendered) {\n                // 显示\n                $container.show();\n            } else {\n                // 加入 DOM 之前先定位位置\n                var menuHeight = $menuELem.getSizeData().height || 0;\n                var width = this.opt.width || 100; // 默认为 100\n                $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n                // 加入到 DOM\n                $menuELem.append($container);\n                this._rendered = true;\n            }\n\n            // 修改属性\n            this._show = true;\n        }\n\n        // 隐藏（移除DOM）\n\n    }, {\n        key: 'hide',\n        value: function hide() {\n            if (this.showTimeoutId) {\n                // 清除之前的定时显示\n                clearTimeout(this.showTimeoutId);\n            }\n\n            var $container = this.$container;\n            if (!this._show) {\n                return;\n            }\n            // 隐藏并需改属性\n            $container.hide();\n            this._show = false;\n        }\n    }]);\n    return DropList;\n}();\n\n/*\r\n    menu - header\r\n*/\nvar Head = function () {\n    function Head(editor) {\n        var _this = this;\n\n        classCallCheck(this, Head);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n        this.type = 'droplist';\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 100,\n            $title: $('<p>设置标题</p>'),\n            type: 'list', // droplist 以列表形式展示\n            list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 Head 对象\n                _this._command(value);\n            }\n        });\n    }\n\n    // 执行命令\n\n\n    createClass(Head, [{\n        key: '_command',\n        value: function _command(value) {\n            var editor = this.editor;\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (editor.$textElem.equal($selectionElem)) {\n                // 不能选中多行来设置标题，否则会出现问题\n                // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n                return;\n            }\n\n            editor.cmd.do('formatBlock', value);\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(_) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            var reg = /^h/i;\n            var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n            if (reg.test(cmdValue)) {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    }]);\n    return Head;\n}();\n\n/*\r\n    menu - fontSize\r\n*/\n\nvar FontSize = function () {\n    function FontSize(editor) {\n        var _this = this;\n\n        classCallCheck(this, FontSize);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n        this.type = 'droplist';\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 160,\n            $title: $('<p>字号</p>'),\n            type: 'list', // droplist 以列表形式展示\n            list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 FontSize 对象\n                _this._command(value);\n            }\n        });\n    }\n\n    // 执行命令\n\n\n    createClass(FontSize, [{\n        key: '_command',\n        value: function _command(value) {\n            var editor = this.editor;\n            editor.cmd.do('fontSize', value);\n        }\n    }]);\n    return FontSize;\n}();\n\n/*\r\n    menu - fontName\r\n*/\n\nvar FontName = function () {\n    function FontName(editor) {\n        var _this = this;\n\n        classCallCheck(this, FontName);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n        this.type = 'droplist';\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 获取配置的字体\n        var config = editor.config;\n        var fontNames = config.fontNames || [];\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 100,\n            $title: $('<p>字体</p>'),\n            type: 'list', // droplist 以列表形式展示\n            list: fontNames.map(function (fontName) {\n                return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n            }),\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 FontName 对象\n                _this._command(value);\n            }\n        });\n    }\n\n    createClass(FontName, [{\n        key: '_command',\n        value: function _command(value) {\n            var editor = this.editor;\n            editor.cmd.do('fontName', value);\n        }\n    }]);\n    return FontName;\n}();\n\n/*\r\n    panel\r\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\nvar Panel = function () {\n    function Panel(menu, opt) {\n        classCallCheck(this, Panel);\n\n        this.menu = menu;\n        this.opt = opt;\n    }\n\n    // 显示（插入DOM）\n\n\n    createClass(Panel, [{\n        key: 'show',\n        value: function show() {\n            var _this = this;\n\n            var menu = this.menu;\n            if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n                // 该菜单已经创建了 panel 不能再创建\n                return;\n            }\n\n            var editor = menu.editor;\n            var $body = $('body');\n            var $textContainerElem = editor.$textContainerElem;\n            var opt = this.opt;\n\n            // panel 的容器\n            var $container = $('<div class=\"w-e-panel-container\"></div>');\n            var width = opt.width || 300; // 默认 300px\n            $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n            // 添加关闭按钮\n            var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n            $container.append($closeBtn);\n            $closeBtn.on('click', function () {\n                _this.hide();\n            });\n\n            // 准备 tabs 容器\n            var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n            var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n            $container.append($tabTitleContainer).append($tabContentContainer);\n\n            // 设置高度\n            var height = opt.height;\n            if (height) {\n                $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n            }\n\n            // tabs\n            var tabs = opt.tabs || [];\n            var tabTitleArr = [];\n            var tabContentArr = [];\n            tabs.forEach(function (tab, tabIndex) {\n                if (!tab) {\n                    return;\n                }\n                var title = tab.title || '';\n                var tpl = tab.tpl || '';\n\n                // 替换多语言\n                title = replaceLang(editor, title);\n                tpl = replaceLang(editor, tpl);\n\n                // 添加到 DOM\n                var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n                $tabTitleContainer.append($title);\n                var $content = $(tpl);\n                $tabContentContainer.append($content);\n\n                // 记录到内存\n                $title._index = tabIndex;\n                tabTitleArr.push($title);\n                tabContentArr.push($content);\n\n                // 设置 active 项\n                if (tabIndex === 0) {\n                    $title._active = true;\n                    $title.addClass('w-e-active');\n                } else {\n                    $content.hide();\n                }\n\n                // 绑定 tab 的事件\n                $title.on('click', function (_) {\n                    if ($title._active) {\n                        return;\n                    }\n                    // 隐藏所有的 tab\n                    tabTitleArr.forEach(function ($title) {\n                        $title._active = false;\n                        $title.removeClass('w-e-active');\n                    });\n                    tabContentArr.forEach(function ($content) {\n                        $content.hide();\n                    });\n\n                    // 显示当前的 tab\n                    $title._active = true;\n                    $title.addClass('w-e-active');\n                    $content.show();\n                });\n            });\n\n            // 绑定关闭事件\n            $container.on('click', function (e) {\n                // 点击时阻止冒泡\n                e.stopPropagation();\n            });\n            $body.on('click', function (_) {\n                _this.hide();\n            });\n\n            // 添加到 DOM\n            $textContainerElem.append($container);\n\n            // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n            tabs.forEach(function (tab, index) {\n                if (!tab) {\n                    return;\n                }\n                var events = tab.events || [];\n                events.forEach(function (event) {\n                    var selector = event.selector;\n                    var type = event.type;\n                    var fn = event.fn || emptyFn;\n                    var $content = tabContentArr[index];\n                    $content.find(selector).on(type, function (e) {\n                        e.stopPropagation();\n                        var needToHide = fn(e);\n                        // 执行完事件之后，是否要关闭 panel\n                        if (needToHide) {\n                            _this.hide();\n                        }\n                    });\n                });\n            });\n\n            // focus 第一个 elem\n            var $inputs = $container.find('input[type=text],textarea');\n            if ($inputs.length) {\n                $inputs.get(0).focus();\n            }\n\n            // 添加到属性\n            this.$container = $container;\n\n            // 隐藏其他 panel\n            this._hideOtherPanels();\n            // 记录该 menu 已经创建了 panel\n            _isCreatedPanelMenus.push(menu);\n        }\n\n        // 隐藏（移除DOM）\n\n    }, {\n        key: 'hide',\n        value: function hide() {\n            var menu = this.menu;\n            var $container = this.$container;\n            if ($container) {\n                $container.remove();\n            }\n\n            // 将该 menu 记录中移除\n            _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n                return item !== menu;\n            });\n        }\n\n        // 一个 panel 展示时，隐藏其他 panel\n\n    }, {\n        key: '_hideOtherPanels',\n        value: function _hideOtherPanels() {\n            if (!_isCreatedPanelMenus.length) {\n                return;\n            }\n            _isCreatedPanelMenus.forEach(function (menu) {\n                var panel = menu.panel || {};\n                if (panel.hide) {\n                    panel.hide();\n                }\n            });\n        }\n    }]);\n    return Panel;\n}();\n\n/*\r\n    menu - link\r\n*/\n// 构造函数\n\nvar Link = function () {\n    function Link(editor) {\n        classCallCheck(this, Link);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n        this.type = 'panel';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    // 点击事件\n\n\n    createClass(Link, [{\n        key: 'onClick',\n        value: function onClick(_) {\n            var editor = this.editor;\n            var $linkelem = void 0;\n\n            if (this._active) {\n                // 当前选区在链接里面\n                $linkelem = editor.selection.getSelectionContainerElem();\n                if (!$linkelem) {\n                    return;\n                }\n                // 将该元素都包含在选取之内，以便后面整体替换\n                editor.selection.createRangeByElem($linkelem);\n                editor.selection.restoreSelection();\n                // 显示 panel\n                this._createPanel($linkelem.text(), $linkelem.attr('href'));\n            } else {\n                // 当前选区不在链接里面\n                if (editor.selection.isSelectionEmpty()) {\n                    // 选区是空的，未选中内容\n                    this._createPanel('', '');\n                } else {\n                    // 选中内容了\n                    this._createPanel(editor.selection.getSelectionText(), '');\n                }\n            }\n        }\n\n        // 创建 panel\n\n    }, {\n        key: '_createPanel',\n        value: function _createPanel(text, link) {\n            var _this = this;\n\n            // panel 中需要用到的id\n            var inputLinkId = getRandom('input-link');\n            var inputTextId = getRandom('input-text');\n            var btnOkId = getRandom('btn-ok');\n            var btnDelId = getRandom('btn-del');\n\n            // 是否显示“删除链接”\n            var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n            // 初始化并显示 panel\n            var panel = new Panel(this, {\n                width: 300,\n                // panel 中可包含多个 tab\n                tabs: [{\n                    // tab 的标题\n                    title: '链接',\n                    // 模板\n                    tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                    // 事件绑定\n                    events: [\n                    // 插入链接\n                    {\n                        selector: '#' + btnOkId,\n                        type: 'click',\n                        fn: function fn() {\n                            // 执行插入链接\n                            var $link = $('#' + inputLinkId);\n                            var $text = $('#' + inputTextId);\n                            var link = $link.val();\n                            var text = $text.val();\n                            _this._insertLink(text, link);\n\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    },\n                    // 删除链接\n                    {\n                        selector: '#' + btnDelId,\n                        type: 'click',\n                        fn: function fn() {\n                            // 执行删除链接\n                            _this._delLink();\n\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }] // tab end\n                }] // tabs end\n            });\n\n            // 显示 panel\n            panel.show();\n\n            // 记录属性\n            this.panel = panel;\n        }\n\n        // 删除当前链接\n\n    }, {\n        key: '_delLink',\n        value: function _delLink() {\n            if (!this._active) {\n                return;\n            }\n            var editor = this.editor;\n            var $selectionELem = editor.selection.getSelectionContainerElem();\n            if (!$selectionELem) {\n                return;\n            }\n            var selectionText = editor.selection.getSelectionText();\n            editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n        }\n\n        // 插入链接\n\n    }, {\n        key: '_insertLink',\n        value: function _insertLink(text, link) {\n            var editor = this.editor;\n            var config = editor.config;\n            var linkCheck = config.linkCheck;\n            var checkResult = true; // 默认为 true\n            if (linkCheck && typeof linkCheck === 'function') {\n                checkResult = linkCheck(text, link);\n            }\n            if (checkResult === true) {\n                editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n            } else {\n                alert(checkResult);\n            }\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(_) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            var $selectionELem = editor.selection.getSelectionContainerElem();\n            if (!$selectionELem) {\n                return;\n            }\n            if ($selectionELem.getNodeName() === 'A') {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    }]);\n    return Link;\n}();\n\n/*\r\n    italic-menu\r\n*/\nvar Italic = function () {\n    function Italic(editor) {\n        classCallCheck(this, Italic);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    // 点击事件\n\n\n    createClass(Italic, [{\n        key: 'onClick',\n        value: function onClick(_) {\n            // 点击菜单将触发这里\n\n            var editor = this.editor;\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n            if (isSeleEmpty) {\n                // 选区是空的，插入并选中一个“空白”\n                editor.selection.createEmptyRange();\n            }\n\n            // 执行 italic 命令\n            editor.cmd.do('italic');\n\n            if (isSeleEmpty) {\n                // 需要将选取折叠起来\n                editor.selection.collapseRange();\n                editor.selection.restoreSelection();\n            }\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(_) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            if (editor.cmd.queryCommandState('italic')) {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    }]);\n    return Italic;\n}();\n\n/*\r\n    redo-menu\r\n*/\nvar Redo = function () {\n    function Redo(editor) {\n        classCallCheck(this, Redo);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    // 点击事件\n\n\n    createClass(Redo, [{\n        key: 'onClick',\n        value: function onClick(_) {\n            // 点击菜单将触发这里\n\n            var editor = this.editor;\n\n            // 执行 redo 命令\n            editor.cmd.do('redo');\n        }\n    }]);\n    return Redo;\n}();\n\n/*\r\n    strikeThrough-menu\r\n*/\nvar StrikeThrough = function () {\n    function StrikeThrough(editor) {\n        classCallCheck(this, StrikeThrough);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    // 点击事件\n\n\n    createClass(StrikeThrough, [{\n        key: 'onClick',\n        value: function onClick(_) {\n            // 点击菜单将触发这里\n\n            var editor = this.editor;\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n            if (isSeleEmpty) {\n                // 选区是空的，插入并选中一个“空白”\n                editor.selection.createEmptyRange();\n            }\n\n            // 执行 strikeThrough 命令\n            editor.cmd.do('strikeThrough');\n\n            if (isSeleEmpty) {\n                // 需要将选取折叠起来\n                editor.selection.collapseRange();\n                editor.selection.restoreSelection();\n            }\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(_) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            if (editor.cmd.queryCommandState('strikeThrough')) {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    }]);\n    return StrikeThrough;\n}();\n\n/*\r\n    underline-menu\r\n*/\nvar Underline = function () {\n    function Underline(editor) {\n        classCallCheck(this, Underline);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    // 点击事件\n\n\n    createClass(Underline, [{\n        key: 'onClick',\n        value: function onClick(_) {\n            // 点击菜单将触发这里\n\n            var editor = this.editor;\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n            if (isSeleEmpty) {\n                // 选区是空的，插入并选中一个“空白”\n                editor.selection.createEmptyRange();\n            }\n\n            // 执行 underline 命令\n            editor.cmd.do('underline');\n\n            if (isSeleEmpty) {\n                // 需要将选取折叠起来\n                editor.selection.collapseRange();\n                editor.selection.restoreSelection();\n            }\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(_) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            if (editor.cmd.queryCommandState('underline')) {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    }]);\n    return Underline;\n}();\n\n/*\r\n    undo-menu\r\n*/\nvar Undo = function () {\n    function Undo(editor) {\n        classCallCheck(this, Undo);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    // 点击事件\n\n\n    createClass(Undo, [{\n        key: 'onClick',\n        value: function onClick(_) {\n            // 点击菜单将触发这里\n\n            var editor = this.editor;\n\n            // 执行 undo 命令\n            editor.cmd.do('undo');\n        }\n    }]);\n    return Undo;\n}();\n\n/*\r\n    menu - list\r\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\r\n    menu - justify\r\n*/\nvar Justify = function () {\n    function Justify(editor) {\n        classCallCheck(this, Justify);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n        this.type = 'droplist';\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 100,\n            $title: $('<p>对齐方式</p>'),\n            type: 'list', // droplist 以列表形式展示\n            list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 List 对象\n                this._command(value);\n            }\n        });\n    }\n\n    // 执行命令\n\n\n    createClass(Justify, [{\n        key: '_command',\n        value: function _command(value) {\n            var editor = this.editor;\n            editor.cmd.do(value);\n        }\n    }]);\n    return Justify;\n}();\n\n/*\r\n    menu - Forecolor\r\n*/\n// 构造函数\n\nvar ForeColor = function () {\n    function ForeColor(editor) {\n        var _this = this;\n\n        classCallCheck(this, ForeColor);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n        this.type = 'droplist';\n\n        // 获取配置的颜色\n        var config = editor.config;\n        var colors = config.colors || [];\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 120,\n            $title: $('<p>文字颜色</p>'),\n            type: 'inline-block', // droplist 内容以 block 形式展示\n            list: colors.map(function (color) {\n                return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n            }),\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 ForeColor 对象\n                _this._command(value);\n            }\n        });\n    }\n\n    // 执行命令\n\n\n    createClass(ForeColor, [{\n        key: '_command',\n        value: function _command(value) {\n            var editor = this.editor;\n            editor.cmd.do('foreColor', value);\n        }\n    }]);\n    return ForeColor;\n}();\n\n/*\r\n    menu - BackColor\r\n*/\nvar BackColor = function () {\n    function BackColor(editor) {\n        var _this = this;\n\n        classCallCheck(this, BackColor);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n        this.type = 'droplist';\n\n        // 获取配置的颜色\n        var config = editor.config;\n        var colors = config.colors || [];\n\n        // 当前是否 active 状态\n        this._active = false;\n\n        // 初始化 droplist\n        this.droplist = new DropList(this, {\n            width: 120,\n            $title: $('<p>背景色</p>'),\n            type: 'inline-block', // droplist 内容以 block 形式展示\n            list: colors.map(function (color) {\n                return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n            }),\n            onClick: function onClick(value) {\n                // 注意 this 是指向当前的 BackColor 对象\n                _this._command(value);\n            }\n        });\n    }\n\n    // 执行命令\n\n\n    createClass(BackColor, [{\n        key: '_command',\n        value: function _command(value) {\n            var editor = this.editor;\n            editor.cmd.do('backColor', value);\n        }\n    }]);\n    return BackColor;\n}();\n\n/*\r\n    menu - quote\r\n*/\nvar Quote = function () {\n    function Quote(editor) {\n        classCallCheck(this, Quote);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n        this.type = 'click';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    createClass(Quote, [{\n        key: 'onClick',\n        value: function onClick(_) {\n            var editor = this.editor;\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var nodeName = $selectionElem.getNodeName();\n\n            if (!UA.isIE()) {\n                if (nodeName === 'BLOCKQUOTE') {\n                    // 撤销 quote\n                    editor.cmd.do('formatBlock', '<P>');\n                } else {\n                    // 转换为 quote\n                    editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n                }\n                return;\n            }\n\n            // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n            var content = void 0,\n                $targetELem = void 0;\n            if (nodeName === 'P') {\n                // 将 P 转换为 quote\n                content = $selectionElem.text();\n                $targetELem = $('<blockquote>' + content + '</blockquote>');\n                $targetELem.insertAfter($selectionElem);\n                $selectionElem.remove();\n                return;\n            }\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                content = $selectionElem.text();\n                $targetELem = $('<p>' + content + '</p>');\n                $targetELem.insertAfter($selectionElem);\n                $selectionElem.remove();\n            }\n        }\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(_) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            var reg = /^BLOCKQUOTE$/i;\n            var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n            if (reg.test(cmdValue)) {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    }]);\n    return Quote;\n}();\n\n/*\r\n    menu - code\r\n*/\n// 构造函数\n\nvar Code = function () {\n    function Code(editor) {\n        classCallCheck(this, Code);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n        this.type = 'panel';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    createClass(Code, [{\n        key: 'onClick',\n        value: function onClick(_) {\n            var editor = this.editor;\n            var $startElem = editor.selection.getSelectionStartElem();\n            var $endElem = editor.selection.getSelectionEndElem();\n            var isSeleEmpty = editor.selection.isSelectionEmpty();\n            var selectionText = editor.selection.getSelectionText();\n            var $code = void 0;\n\n            if (!$startElem.equal($endElem)) {\n                // 跨元素选择，不做处理\n                editor.selection.restoreSelection();\n                return;\n            }\n            if (!isSeleEmpty) {\n                // 选取不是空，用 <code> 包裹即可\n                $code = $('<code>' + selectionText + '</code>');\n                editor.cmd.do('insertElem', $code);\n                editor.selection.createRangeByElem($code, false);\n                editor.selection.restoreSelection();\n                return;\n            }\n\n            // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n            if (this._active) {\n                // 选中状态，将编辑内容\n                this._createPanel($startElem.html());\n            } else {\n                // 未选中状态，将创建内容\n                this._createPanel();\n            }\n        }\n    }, {\n        key: '_createPanel',\n        value: function _createPanel(value) {\n            var _this = this;\n\n            // value - 要编辑的内容\n            value = value || '';\n            var type = !value ? 'new' : 'edit';\n            var textId = getRandom('texxt');\n            var btnId = getRandom('btn');\n\n            var panel = new Panel(this, {\n                width: 500,\n                // 一个 Panel 包含多个 tab\n                tabs: [{\n                    // 标题\n                    title: '插入代码',\n                    // 模板\n                    tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                    // 事件绑定\n                    events: [\n                    // 插入代码\n                    {\n                        selector: '#' + btnId,\n                        type: 'click',\n                        fn: function fn() {\n                            var $text = $('#' + textId);\n                            var text = $text.val() || $text.html();\n                            text = replaceHtmlSymbol(text);\n                            if (type === 'new') {\n                                // 新插入\n                                _this._insertCode(text);\n                            } else {\n                                // 编辑更新\n                                _this._updateCode(text);\n                            }\n\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }] // first tab end\n                }] // tabs end\n            }); // new Panel end\n\n            // 显示 panel\n            panel.show();\n\n            // 记录属性\n            this.panel = panel;\n        }\n\n        // 插入代码\n\n    }, {\n        key: '_insertCode',\n        value: function _insertCode(value) {\n            var editor = this.editor;\n            editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n        }\n\n        // 更新代码\n\n    }, {\n        key: '_updateCode',\n        value: function _updateCode(value) {\n            var editor = this.editor;\n            var $selectionELem = editor.selection.getSelectionContainerElem();\n            if (!$selectionELem) {\n                return;\n            }\n            $selectionELem.html(value);\n            editor.selection.restoreSelection();\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(_) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            var $selectionELem = editor.selection.getSelectionContainerElem();\n            if (!$selectionELem) {\n                return;\n            }\n            var $parentElem = $selectionELem.parent();\n            if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    }]);\n    return Code;\n}();\n\n/*\r\n    menu - emoticon\r\n*/\n// 构造函数\n\nvar Emoticon = function () {\n    function Emoticon(editor) {\n        classCallCheck(this, Emoticon);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n        this.type = 'panel';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    createClass(Emoticon, [{\n        key: 'onClick',\n        value: function onClick() {\n            this._createPanel();\n        }\n    }, {\n        key: '_createPanel',\n        value: function _createPanel() {\n            var _this = this;\n\n            var editor = this.editor;\n            var config = editor.config;\n            // 获取表情配置\n            var emotions = config.emotions || [];\n\n            // 创建表情 dropPanel 的配置\n            var tabConfig = [];\n            emotions.forEach(function (emotData) {\n                var emotType = emotData.type;\n                var content = emotData.content || [];\n\n                // 这一组表情最终拼接出来的 html\n                var faceHtml = '';\n\n                // emoji 表情\n                if (emotType === 'emoji') {\n                    content.forEach(function (item) {\n                        if (item) {\n                            faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                        }\n                    });\n                }\n                // 图片表情\n                if (emotType === 'image') {\n                    content.forEach(function (item) {\n                        var src = item.src;\n                        var alt = item.alt;\n                        if (src) {\n                            // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                            faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                        }\n                    });\n                }\n\n                tabConfig.push({\n                    title: emotData.title,\n                    tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                    events: [{\n                        selector: 'span.w-e-item',\n                        type: 'click',\n                        fn: function fn(e) {\n                            var target = e.target;\n                            var $target = $(target);\n                            var nodeName = $target.getNodeName();\n\n                            var insertHtml = void 0;\n                            if (nodeName === 'IMG') {\n                                // 插入图片\n                                insertHtml = $target.parent().html();\n                            } else {\n                                // 插入 emoji\n                                insertHtml = '<span>' + $target.html() + '</span>';\n                            }\n\n                            _this._insert(insertHtml);\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }]\n                });\n            });\n\n            var panel = new Panel(this, {\n                width: 300,\n                height: 200,\n                // 一个 Panel 包含多个 tab\n                tabs: tabConfig\n            });\n\n            // 显示 panel\n            panel.show();\n\n            // 记录属性\n            this.panel = panel;\n        }\n\n        // 插入表情\n\n    }, {\n        key: '_insert',\n        value: function _insert(emotHtml) {\n            var editor = this.editor;\n            editor.cmd.do('insertHTML', emotHtml);\n        }\n    }]);\n    return Emoticon;\n}();\n\n/*\r\n    menu - table\r\n*/\nvar Table = function () {\n    function Table(editor) {\n        classCallCheck(this, Table);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n        this.type = 'panel';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    createClass(Table, [{\n        key: 'onClick',\n        value: function onClick() {\n            if (this._active) {\n                // 编辑现有表格\n                this._createEditPanel();\n            } else {\n                // 插入新表格\n                this._createInsertPanel();\n            }\n        }\n\n        // 创建插入新表格的 panel\n\n    }, {\n        key: '_createInsertPanel',\n        value: function _createInsertPanel() {\n            var _this = this;\n\n            // 用到的 id\n            var btnInsertId = getRandom('btn');\n            var textRowNum = getRandom('row');\n            var textColNum = getRandom('col');\n\n            var panel = new Panel(this, {\n                width: 250,\n                // panel 包含多个 tab\n                tabs: [{\n                    // 标题\n                    title: '插入表格',\n                    // 模板\n                    tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                    // 事件绑定\n                    events: [{\n                        // 点击按钮，插入表格\n                        selector: '#' + btnInsertId,\n                        type: 'click',\n                        fn: function fn() {\n                            var rowNum = parseInt($('#' + textRowNum).val());\n                            var colNum = parseInt($('#' + textColNum).val());\n\n                            if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                                // form 数据有效\n                                _this._insert(rowNum, colNum);\n                            }\n\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }] // first tab end\n                }] // tabs end\n            }); // panel end\n\n            // 展示 panel\n            panel.show();\n\n            // 记录属性\n            this.panel = panel;\n        }\n\n        // 插入表格\n\n    }, {\n        key: '_insert',\n        value: function _insert(rowNum, colNum) {\n            // 拼接 table 模板\n            var r = void 0,\n                c = void 0;\n            var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n            for (r = 0; r < rowNum; r++) {\n                html += '<tr>';\n                if (r === 0) {\n                    for (c = 0; c < colNum; c++) {\n                        html += '<th>&nbsp;</th>';\n                    }\n                } else {\n                    for (c = 0; c < colNum; c++) {\n                        html += '<td>&nbsp;</td>';\n                    }\n                }\n                html += '</tr>';\n            }\n            html += '</table><p><br></p>';\n\n            // 执行命令\n            var editor = this.editor;\n            editor.cmd.do('insertHTML', html);\n\n            // 防止 firefox 下出现 resize 的控制点\n            editor.cmd.do('enableObjectResizing', false);\n            editor.cmd.do('enableInlineTableEditing', false);\n        }\n\n        // 创建编辑表格的 panel\n\n    }, {\n        key: '_createEditPanel',\n        value: function _createEditPanel() {\n            var _this2 = this;\n\n            // 可用的 id\n            var addRowBtnId = getRandom('add-row');\n            var addColBtnId = getRandom('add-col');\n            var delRowBtnId = getRandom('del-row');\n            var delColBtnId = getRandom('del-col');\n            var delTableBtnId = getRandom('del-table');\n\n            // 创建 panel 对象\n            var panel = new Panel(this, {\n                width: 320,\n                // panel 包含多个 tab\n                tabs: [{\n                    // 标题\n                    title: '编辑表格',\n                    // 模板\n                    tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                    // 事件绑定\n                    events: [{\n                        // 增加行\n                        selector: '#' + addRowBtnId,\n                        type: 'click',\n                        fn: function fn() {\n                            _this2._addRow();\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }, {\n                        // 增加列\n                        selector: '#' + addColBtnId,\n                        type: 'click',\n                        fn: function fn() {\n                            _this2._addCol();\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }, {\n                        // 删除行\n                        selector: '#' + delRowBtnId,\n                        type: 'click',\n                        fn: function fn() {\n                            _this2._delRow();\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }, {\n                        // 删除列\n                        selector: '#' + delColBtnId,\n                        type: 'click',\n                        fn: function fn() {\n                            _this2._delCol();\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }, {\n                        // 删除表格\n                        selector: '#' + delTableBtnId,\n                        type: 'click',\n                        fn: function fn() {\n                            _this2._delTable();\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }]\n                }]\n            });\n            // 显示 panel\n            panel.show();\n        }\n\n        // 获取选中的单元格的位置信息\n\n    }, {\n        key: '_getLocationData',\n        value: function _getLocationData() {\n            var result = {};\n            var editor = this.editor;\n            var $selectionELem = editor.selection.getSelectionContainerElem();\n            if (!$selectionELem) {\n                return;\n            }\n            var nodeName = $selectionELem.getNodeName();\n            if (nodeName !== 'TD' && nodeName !== 'TH') {\n                return;\n            }\n\n            // 获取 td index\n            var $tr = $selectionELem.parent();\n            var $tds = $tr.children();\n            var tdLength = $tds.length;\n            $tds.forEach(function (td, index) {\n                if (td === $selectionELem[0]) {\n                    // 记录并跳出循环\n                    result.td = {\n                        index: index,\n                        elem: td,\n                        length: tdLength\n                    };\n                    return false;\n                }\n            });\n\n            // 获取 tr index\n            var $tbody = $tr.parent();\n            var $trs = $tbody.children();\n            var trLength = $trs.length;\n            $trs.forEach(function (tr, index) {\n                if (tr === $tr[0]) {\n                    // 记录并跳出循环\n                    result.tr = {\n                        index: index,\n                        elem: tr,\n                        length: trLength\n                    };\n                    return false;\n                }\n            });\n\n            // 返回结果\n            return result;\n        }\n\n        // 增加行\n\n    }, {\n        key: '_addRow',\n        value: function _addRow() {\n            // 获取当前单元格的位置信息\n            var locationData = this._getLocationData();\n            if (!locationData) {\n                return;\n            }\n            var trData = locationData.tr;\n            var $currentTr = $(trData.elem);\n            var tdData = locationData.td;\n            var tdLength = tdData.length;\n\n            // 拼接即将插入的字符串\n            var newTr = document.createElement('tr');\n            var tpl = '',\n                i = void 0;\n            for (i = 0; i < tdLength; i++) {\n                tpl += '<td>&nbsp;</td>';\n            }\n            newTr.innerHTML = tpl;\n            // 插入\n            $(newTr).insertAfter($currentTr);\n        }\n\n        // 增加列\n\n    }, {\n        key: '_addCol',\n        value: function _addCol() {\n            // 获取当前单元格的位置信息\n            var locationData = this._getLocationData();\n            if (!locationData) {\n                return;\n            }\n            var trData = locationData.tr;\n            var tdData = locationData.td;\n            var tdIndex = tdData.index;\n            var $currentTr = $(trData.elem);\n            var $trParent = $currentTr.parent();\n            var $trs = $trParent.children();\n\n            // 遍历所有行\n            $trs.forEach(function (tr) {\n                var $tr = $(tr);\n                var $tds = $tr.children();\n                var $currentTd = $tds.get(tdIndex);\n                var name = $currentTd.getNodeName().toLowerCase();\n\n                // new 一个 td，并插入\n                var newTd = document.createElement(name);\n                $(newTd).insertAfter($currentTd);\n            });\n        }\n\n        // 删除行\n\n    }, {\n        key: '_delRow',\n        value: function _delRow() {\n            // 获取当前单元格的位置信息\n            var locationData = this._getLocationData();\n            if (!locationData) {\n                return;\n            }\n            var trData = locationData.tr;\n            var $currentTr = $(trData.elem);\n            $currentTr.remove();\n        }\n\n        // 删除列\n\n    }, {\n        key: '_delCol',\n        value: function _delCol() {\n            // 获取当前单元格的位置信息\n            var locationData = this._getLocationData();\n            if (!locationData) {\n                return;\n            }\n            var trData = locationData.tr;\n            var tdData = locationData.td;\n            var tdIndex = tdData.index;\n            var $currentTr = $(trData.elem);\n            var $trParent = $currentTr.parent();\n            var $trs = $trParent.children();\n\n            // 遍历所有行\n            $trs.forEach(function (tr) {\n                var $tr = $(tr);\n                var $tds = $tr.children();\n                var $currentTd = $tds.get(tdIndex);\n                // 删除\n                $currentTd.remove();\n            });\n        }\n\n        // 删除表格\n\n    }, {\n        key: '_delTable',\n        value: function _delTable() {\n            var editor = this.editor;\n            var $selectionELem = editor.selection.getSelectionContainerElem();\n            if (!$selectionELem) {\n                return;\n            }\n            var $table = $selectionELem.parentUntil('table');\n            if (!$table) {\n                return;\n            }\n            $table.remove();\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(_) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            var $selectionELem = editor.selection.getSelectionContainerElem();\n            if (!$selectionELem) {\n                return;\n            }\n            var nodeName = $selectionELem.getNodeName();\n            if (nodeName === 'TD' || nodeName === 'TH') {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    }]);\n    return Table;\n}();\n\n/*\r\n    menu - video\r\n*/\nvar Video = function () {\n    function Video(editor) {\n        classCallCheck(this, Video);\n\n        this.editor = editor;\n        this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n        this.type = 'panel';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    createClass(Video, [{\n        key: 'onClick',\n        value: function onClick() {\n            this._createPanel();\n        }\n    }, {\n        key: '_createPanel',\n        value: function _createPanel() {\n            var _this = this;\n\n            // 创建 id\n            var textValId = getRandom('text-val');\n            var btnId = getRandom('btn');\n\n            // 创建 panel\n            var panel = new Panel(this, {\n                width: 350,\n                // 一个 panel 多个 tab\n                tabs: [{\n                    // 标题\n                    title: '插入视频',\n                    // 模板\n                    tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                    // 事件绑定\n                    events: [{\n                        selector: '#' + btnId,\n                        type: 'click',\n                        fn: function fn() {\n                            var $text = $('#' + textValId);\n                            var val = $text.val().trim();\n\n                            // 测试用视频地址\n                            // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                            if (val) {\n                                // 插入视频\n                                _this._insert(val);\n                            }\n\n                            // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                            return true;\n                        }\n                    }] // first tab end\n                }] // tabs end\n            }); // panel end\n\n            // 显示 panel\n            panel.show();\n\n            // 记录属性\n            this.panel = panel;\n        }\n\n        // 插入视频\n\n    }, {\n        key: '_insert',\n        value: function _insert(val) {\n            var editor = this.editor;\n            editor.cmd.do('insertHTML', val + '<p><br></p>');\n        }\n    }]);\n    return Video;\n}();\n\n/*\r\n    menu - img\r\n*/\nvar Image = function () {\n    function Image(editor) {\n        classCallCheck(this, Image);\n\n        this.editor = editor;\n        var imgMenuId = getRandom('w-e-img');\n        this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n        editor.imgMenuId = imgMenuId;\n        this.type = 'panel';\n\n        // 当前是否 active 状态\n        this._active = false;\n    }\n\n    createClass(Image, [{\n        key: 'onClick',\n        value: function onClick() {\n            var editor = this.editor;\n            var config = editor.config;\n            if (config.qiniu) {\n                return;\n            }\n            if (this._active) {\n                this._createEditPanel();\n            } else {\n                this._createInsertPanel();\n            }\n        }\n    }, {\n        key: '_createEditPanel',\n        value: function _createEditPanel() {\n            var editor = this.editor;\n\n            // id\n            var width30 = getRandom('width-30');\n            var width50 = getRandom('width-50');\n            var width100 = getRandom('width-100');\n            var delBtn = getRandom('del-btn');\n\n            // tab 配置\n            var tabsConfig = [{\n                title: '编辑图片',\n                tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n                events: [{\n                    selector: '#' + width30,\n                    type: 'click',\n                    fn: function fn() {\n                        var $img = editor._selectedImg;\n                        if ($img) {\n                            $img.css('max-width', '30%');\n                        }\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    selector: '#' + width50,\n                    type: 'click',\n                    fn: function fn() {\n                        var $img = editor._selectedImg;\n                        if ($img) {\n                            $img.css('max-width', '50%');\n                        }\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    selector: '#' + width100,\n                    type: 'click',\n                    fn: function fn() {\n                        var $img = editor._selectedImg;\n                        if ($img) {\n                            $img.css('max-width', '100%');\n                        }\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    selector: '#' + delBtn,\n                    type: 'click',\n                    fn: function fn() {\n                        var $img = editor._selectedImg;\n                        if ($img) {\n                            $img.remove();\n                        }\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }];\n\n            // 创建 panel 并显示\n            var panel = new Panel(this, {\n                width: 300,\n                tabs: tabsConfig\n            });\n            panel.show();\n\n            // 记录属性\n            this.panel = panel;\n        }\n    }, {\n        key: '_createInsertPanel',\n        value: function _createInsertPanel() {\n            var editor = this.editor;\n            var uploadImg = editor.uploadImg;\n            var config = editor.config;\n\n            // id\n            var upTriggerId = getRandom('up-trigger');\n            var upFileId = getRandom('up-file');\n            var linkUrlId = getRandom('link-url');\n            var linkBtnId = getRandom('link-btn');\n\n            // tabs 的配置\n            var tabsConfig = [{\n                title: '上传图片',\n                tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n                events: [{\n                    // 触发选择图片\n                    selector: '#' + upTriggerId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $file = $('#' + upFileId);\n                        var fileElem = $file[0];\n                        if (fileElem) {\n                            fileElem.click();\n                        } else {\n                            // 返回 true 可关闭 panel\n                            return true;\n                        }\n                    }\n                }, {\n                    // 选择图片完毕\n                    selector: '#' + upFileId,\n                    type: 'change',\n                    fn: function fn() {\n                        var $file = $('#' + upFileId);\n                        var fileElem = $file[0];\n                        if (!fileElem) {\n                            // 返回 true 可关闭 panel\n                            return true;\n                        }\n\n                        // 获取选中的 file 对象列表\n                        var fileList = fileElem.files;\n                        if (fileList.length) {\n                            uploadImg.uploadImg(fileList);\n                        }\n\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }]\n            }, // first tab end\n            {\n                title: '网络图片',\n                tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n                events: [{\n                    selector: '#' + linkBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $linkUrl = $('#' + linkUrlId);\n                        var url = $linkUrl.val().trim();\n\n                        if (url) {\n                            uploadImg.insertLinkImg(url);\n                        }\n\n                        // 返回 true 表示函数执行结束之后关闭 panel\n                        return true;\n                    }\n                }] // second tab end\n            }]; // tabs end\n\n            // 判断 tabs 的显示\n            var tabsConfigResult = [];\n            if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n                // 显示“上传图片”\n                tabsConfigResult.push(tabsConfig[0]);\n            }\n            if (config.showLinkImg) {\n                // 显示“网络图片”\n                tabsConfigResult.push(tabsConfig[1]);\n            }\n\n            // 创建 panel 并显示\n            var panel = new Panel(this, {\n                width: 300,\n                tabs: tabsConfigResult\n            });\n            panel.show();\n\n            // 记录属性\n            this.panel = panel;\n        }\n\n        // 试图改变 active 状态\n\n    }, {\n        key: 'tryChangeActive',\n        value: function tryChangeActive(_) {\n            var editor = this.editor;\n            var $elem = this.$elem;\n            if (editor._selectedImg) {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        }\n    }]);\n    return Image;\n}();\n\n/*\r\n    所有菜单的汇总\r\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\r\n    菜单集合\r\n*/\n// 构造函数\n\nvar Menus = function () {\n    function Menus(editor) {\n        classCallCheck(this, Menus);\n\n        this.editor = editor;\n        this.menus = {};\n    }\n\n    // 初始化菜单\n\n\n    createClass(Menus, [{\n        key: 'init',\n        value: function init() {\n            var _this = this;\n\n            var editor = this.editor;\n            var config = editor.config || {};\n            var configMenus = config.menus || []; // 获取配置中的菜单\n\n            // 根据配置信息，创建菜单\n            configMenus.forEach(function (menuKey) {\n                var MenuConstructor = MenuConstructors[menuKey];\n                if (MenuConstructor && typeof MenuConstructor === 'function') {\n                    // 创建单个菜单\n                    _this.menus[menuKey] = new MenuConstructor(editor);\n                }\n            });\n\n            // 添加到菜单栏\n            this._addToToolbar();\n\n            // 绑定事件\n            this._bindEvent();\n        }\n\n        // 添加到菜单栏\n\n    }, {\n        key: '_addToToolbar',\n        value: function _addToToolbar() {\n            var editor = this.editor;\n            var $toolbarElem = editor.$toolbarElem;\n            var menus = this.menus;\n            var config = editor.config;\n            // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n            var zIndex = config.zIndex + 1;\n            objForEach(menus, function (key, menu) {\n                var $elem = menu.$elem;\n                if ($elem) {\n                    // 设置 z-index\n                    $elem.css('z-index', zIndex);\n                    $toolbarElem.append($elem);\n                }\n            });\n        }\n\n        // 绑定菜单 click mouseenter 事件\n\n    }, {\n        key: '_bindEvent',\n        value: function _bindEvent() {\n            var menus = this.menus;\n            var editor = this.editor;\n            objForEach(menus, function (key, menu) {\n                var type = menu.type;\n                if (!type) {\n                    return;\n                }\n                var $elem = menu.$elem;\n                var droplist = menu.droplist;\n                var panel = menu.panel;\n\n                // 点击类型，例如 bold\n                if (type === 'click' && menu.onClick) {\n                    $elem.on('click', function (e) {\n                        if (editor.selection.getRange() == null) {\n                            return;\n                        }\n                        menu.onClick(e);\n                    });\n                }\n\n                // 下拉框，例如 head\n                if (type === 'droplist' && droplist) {\n                    $elem.on('mouseenter', function (e) {\n                        if (editor.selection.getRange() == null) {\n                            return;\n                        }\n                        // 显示\n                        droplist.showTimeoutId = setTimeout(function () {\n                            droplist.show();\n                        }, 200);\n                    }).on('mouseleave', function (e) {\n                        // 隐藏\n                        droplist.hideTimeoutId = setTimeout(function () {\n                            droplist.hide();\n                        }, 0);\n                    });\n                }\n\n                // 弹框类型，例如 link\n                if (type === 'panel' && menu.onClick) {\n                    $elem.on('click', function (e) {\n                        e.stopPropagation();\n                        if (editor.selection.getRange() == null) {\n                            return;\n                        }\n                        // 在自定义事件中显示 panel\n                        menu.onClick(e);\n                    });\n                }\n            });\n        }\n\n        // 尝试修改菜单状态\n\n    }, {\n        key: 'changeActive',\n        value: function changeActive() {\n            var menus = this.menus;\n            objForEach(menus, function (key, menu) {\n                if (menu.tryChangeActive) {\n                    setTimeout(function () {\n                        menu.tryChangeActive();\n                    }, 100);\n                }\n            });\n        }\n    }]);\n    return Menus;\n}();\n\n/*\r\n    粘贴信息的处理\r\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n    // 过滤 data-xxx 属性\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=(['\"]).+?(['\"])/igm, '');\n\n    if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=(['\"]).*?(['\"])/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=(['\"]).*?(['\"])/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\r\n    编辑区域\r\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n            elemResult = replaceHtmlSymbol(elemResult);\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\nvar Text = function () {\n    function Text(editor) {\n        classCallCheck(this, Text);\n\n        this.editor = editor;\n    }\n\n    // 初始化\n\n\n    createClass(Text, [{\n        key: 'init',\n        value: function init() {\n            // 绑定事件\n            this._bindEvent();\n        }\n\n        // 清空内容\n\n    }, {\n        key: 'clear',\n        value: function clear() {\n            this.html('<p><br></p>');\n        }\n\n        // 获取 设置 html\n\n    }, {\n        key: 'html',\n        value: function html(val) {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n            var html = void 0;\n            if (val == null) {\n                html = $textElem.html();\n                // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n                html = html.replace(/\\u200b/gm, '');\n                return html;\n            } else {\n                $textElem.html(val);\n\n                // 初始化选取，将光标定位到内容尾部\n                editor.initSelection();\n            }\n        }\n\n        // 获取 JSON\n\n    }, {\n        key: 'getJSON',\n        value: function getJSON() {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n            return getChildrenJSON($textElem);\n        }\n\n        // 获取 设置 text\n\n    }, {\n        key: 'text',\n        value: function text(val) {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n            var text = void 0;\n            if (val == null) {\n                text = $textElem.text();\n                // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n                text = text.replace(/\\u200b/gm, '');\n                return text;\n            } else {\n                $textElem.text('<p>' + val + '</p>');\n\n                // 初始化选取，将光标定位到内容尾部\n                editor.initSelection();\n            }\n        }\n\n        // 追加内容\n\n    }, {\n        key: 'append',\n        value: function append(html) {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n            $textElem.append($(html));\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n\n        // 绑定事件\n\n    }, {\n        key: '_bindEvent',\n        value: function _bindEvent() {\n            // 实时保存选取\n            this._saveRangeRealTime();\n\n            // 按回车建时的特殊处理\n            this._enterKeyHandle();\n\n            // 清空时保留 <p><br></p>\n            this._clearHandle();\n\n            // 粘贴事件（粘贴文字，粘贴图片）\n            this._pasteHandle();\n\n            // tab 特殊处理\n            this._tabHandle();\n\n            // img 点击\n            this._imgHandle();\n\n            // 拖拽事件\n            this._dragHandle();\n        }\n\n        // 实时保存选取\n\n    }, {\n        key: '_saveRangeRealTime',\n        value: function _saveRangeRealTime() {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n\n            // 保存当前的选区\n            function saveRange() {\n                // 随时保存选区\n                editor.selection.saveRange();\n                // 更新按钮 ative 状态\n                editor.menus.changeActive();\n            }\n\n            // 按键后保存\n            $textElem.on('keyup', saveRange);\n            $textElem.on('mousedown', function () {\n                // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n                $textElem.on('mouseleave', saveRange);\n            });\n            $textElem.on('mouseup', function () {\n                saveRange();\n                // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n                $textElem.off('mouseleave', saveRange);\n            });\n        }\n\n        // 按回车键时的特殊处理\n\n    }, {\n        key: '_enterKeyHandle',\n        value: function _enterKeyHandle() {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n\n            function insertEmptyP($selectionElem) {\n                var $p = $('<p><br></p>');\n                $p.insertBefore($selectionElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n                $selectionElem.remove();\n            }\n\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            function pHandle() {\n                var $selectionElem = editor.selection.getSelectionContainerElem();\n                var $parentElem = $selectionElem.parent();\n\n                if ($parentElem.html() === '<code><br></code>') {\n                    // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                    // 而且继续回车跳不出去，因此只能特殊处理\n                    insertEmptyP($selectionElem);\n                    return;\n                }\n\n                if (!$parentElem.equal($textElem)) {\n                    // 不是顶级标签\n                    return;\n                }\n\n                var nodeName = $selectionElem.getNodeName();\n                if (nodeName === 'P') {\n                    // 当前的标签是 P ，不用做处理\n                    return;\n                }\n\n                if ($selectionElem.text()) {\n                    // 有内容，不做处理\n                    return;\n                }\n\n                // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n                insertEmptyP($selectionElem);\n            }\n\n            $textElem.on('keyup', function (e) {\n                if (e.keyCode !== 13) {\n                    // 不是回车键\n                    return;\n                }\n                // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n                pHandle(e);\n            });\n\n            // <pre><code></code></pre> 回车时 特殊处理\n            function codeHandle(e) {\n                var $selectionElem = editor.selection.getSelectionContainerElem();\n                if (!$selectionElem) {\n                    return;\n                }\n                var $parentElem = $selectionElem.parent();\n                var selectionNodeName = $selectionElem.getNodeName();\n                var parentNodeName = $parentElem.getNodeName();\n\n                if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                    // 不符合要求 忽略\n                    return;\n                }\n\n                if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                    // 必须原生支持 insertHTML 命令\n                    return;\n                }\n\n                // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n                if (editor._willBreakCode === true) {\n                    // 此时可以跳出代码块\n                    // 插入 <p> ，并将选取定位到 <p>\n                    var $p = $('<p><br></p>');\n                    $p.insertAfter($parentElem);\n                    editor.selection.createRangeByElem($p, true);\n                    editor.selection.restoreSelection();\n\n                    // 修改状态\n                    editor._willBreakCode = false;\n\n                    e.preventDefault();\n                    return;\n                }\n\n                var _startOffset = editor.selection.getRange().startOffset;\n\n                // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n                editor.cmd.do('insertHTML', '\\n');\n                editor.selection.saveRange();\n                if (editor.selection.getRange().startOffset === _startOffset) {\n                    // 没起作用，再来一遍\n                    editor.cmd.do('insertHTML', '\\n');\n                }\n\n                var codeLength = $selectionElem.html().length;\n                if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                    // 说明光标在代码最后的位置，执行了回车操作\n                    // 记录下来，以便下次回车时候跳出 code\n                    editor._willBreakCode = true;\n                }\n\n                // 阻止默认行为\n                e.preventDefault();\n            }\n\n            $textElem.on('keydown', function (e) {\n                if (e.keyCode !== 13) {\n                    // 不是回车键\n                    // 取消即将跳转代码块的记录\n                    editor._willBreakCode = false;\n                    return;\n                }\n                // <pre><code></code></pre> 回车时 特殊处理\n                codeHandle(e);\n            });\n        }\n\n        // 清空时保留 <p><br></p>\n\n    }, {\n        key: '_clearHandle',\n        value: function _clearHandle() {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n\n            $textElem.on('keydown', function (e) {\n                if (e.keyCode !== 8) {\n                    return;\n                }\n                var txtHtml = $textElem.html().toLowerCase().trim();\n                if (txtHtml === '<p><br></p>') {\n                    // 最后剩下一个空行，就不再删除了\n                    e.preventDefault();\n                }\n            });\n\n            $textElem.on('keyup', function (e) {\n                if (e.keyCode !== 8) {\n                    return;\n                }\n                var $p = void 0;\n                var txtHtml = $textElem.html().toLowerCase().trim();\n\n                // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n                if (!txtHtml || txtHtml === '<br>') {\n                    // 内容空了\n                    $p = $('<p><br/></p>');\n                    $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                    $textElem.append($p);\n                    editor.selection.createRangeByElem($p, false, true);\n                    editor.selection.restoreSelection();\n                }\n            });\n        }\n\n        // 粘贴事件（粘贴文字 粘贴图片）\n\n    }, {\n        key: '_pasteHandle',\n        value: function _pasteHandle() {\n            var editor = this.editor;\n            var config = editor.config;\n            var pasteFilterStyle = config.pasteFilterStyle;\n            var pasteTextHandle = config.pasteTextHandle;\n            var ignoreImg = config.pasteIgnoreImg;\n            var $textElem = editor.$textElem;\n\n            // 粘贴图片、文本的事件，每次只能执行一个\n            // 判断该次粘贴事件是否可以执行\n            var pasteTime = 0;\n\n            function canDo() {\n                var now = Date.now();\n                var flag = false;\n                if (now - pasteTime >= 100) {\n                    // 间隔大于 100 ms ，可以执行\n                    flag = true;\n                }\n                pasteTime = now;\n                return flag;\n            }\n\n            function resetTime() {\n                pasteTime = 0;\n            }\n\n            // 粘贴文字\n            $textElem.on('paste', function (e) {\n                if (UA.isIE()) {\n                    return;\n                } else {\n                    // 阻止默认行为，使用 execCommand 的粘贴命令\n                    e.preventDefault();\n                }\n\n                // 粘贴图片和文本，只能同时使用一个\n                if (!canDo()) {\n                    return;\n                }\n\n                // 获取粘贴的文字\n                var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n                var pasteText = getPasteText(e);\n                pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n                var $selectionElem = editor.selection.getSelectionContainerElem();\n                if (!$selectionElem) {\n                    return;\n                }\n                var nodeName = $selectionElem.getNodeName();\n\n                // code 中只能粘贴纯文本\n                if (nodeName === 'CODE' || nodeName === 'PRE') {\n                    if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                        // 用户自定义过滤处理粘贴内容\n                        pasteText = '' + (pasteTextHandle(pasteText) || '');\n                    }\n                    editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                    return;\n                }\n\n                // 先放开注释，有问题再追查 ————\n                // // 表格中忽略，可能会出现异常问题\n                // if (nodeName === 'TD' || nodeName === 'TH') {\n                //     return\n                // }\n\n                if (!pasteHtml) {\n                    // 没有内容，可继续执行下面的图片粘贴\n                    resetTime();\n                    return;\n                }\n                try {\n                    // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                    // 因此执行 insertHTML 会报错\n                    if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                        // 用户自定义过滤处理粘贴内容\n                        pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                    }\n                    editor.cmd.do('insertHTML', pasteHtml);\n                } catch (ex) {\n                    // 此时使用 pasteText 来兼容一下\n                    if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                        // 用户自定义过滤处理粘贴内容\n                        pasteText = '' + (pasteTextHandle(pasteText) || '');\n                    }\n                    editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                }\n            });\n\n            // 粘贴图片\n            $textElem.on('paste', function (e) {\n                if (UA.isIE()) {\n                    return;\n                } else {\n                    e.preventDefault();\n                }\n\n                // 粘贴图片和文本，只能同时使用一个\n                if (!canDo()) {\n                    return;\n                }\n\n                // 获取粘贴的图片\n                var pasteFiles = getPasteImgs(e);\n                if (!pasteFiles || !pasteFiles.length) {\n                    return;\n                }\n\n                // 获取当前的元素\n                var $selectionElem = editor.selection.getSelectionContainerElem();\n                if (!$selectionElem) {\n                    return;\n                }\n                var nodeName = $selectionElem.getNodeName();\n\n                // code 中粘贴忽略\n                if (nodeName === 'CODE' || nodeName === 'PRE') {\n                    return;\n                }\n\n                // 上传图片\n                var uploadImg = editor.uploadImg;\n                uploadImg.uploadImg(pasteFiles);\n            });\n        }\n\n        // tab 特殊处理\n\n    }, {\n        key: '_tabHandle',\n        value: function _tabHandle() {\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n\n            $textElem.on('keydown', function (e) {\n                if (e.keyCode !== 9) {\n                    return;\n                }\n                if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                    // 必须原生支持 insertHTML 命令\n                    return;\n                }\n                var $selectionElem = editor.selection.getSelectionContainerElem();\n                if (!$selectionElem) {\n                    return;\n                }\n                var $parentElem = $selectionElem.parent();\n                var selectionNodeName = $selectionElem.getNodeName();\n                var parentNodeName = $parentElem.getNodeName();\n\n                if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                    // <pre><code> 里面\n                    editor.cmd.do('insertHTML', '    ');\n                } else {\n                    // 普通文字\n                    editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n                }\n\n                e.preventDefault();\n            });\n        }\n\n        // img 点击\n\n    }, {\n        key: '_imgHandle',\n        value: function _imgHandle() {\n            var _this = this;\n\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n\n            // 为图片增加 selected 样式\n            $textElem.on('click', 'img', function (_) {\n                var img = _this;\n                var $img = $(img);\n\n                if ($img.attr('data-w-e') === '1') {\n                    // 是表情图片，忽略\n                    return;\n                }\n\n                // 记录当前点击过的图片\n                editor._selectedImg = $img;\n\n                // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n                editor.selection.createRangeByElem($img);\n                editor.selection.restoreSelection();\n            });\n\n            // 去掉图片的 selected 样式\n            $textElem.on('click  keyup', function (e) {\n                if (e.target.matches('img')) {\n                    // 点击的是图片，忽略\n                    return;\n                }\n                // 删除记录\n                editor._selectedImg = null;\n            });\n        }\n\n        // 拖拽事件\n\n    }, {\n        key: '_dragHandle',\n        value: function _dragHandle() {\n            var editor = this.editor;\n\n            // 禁用 document 拖拽事件\n            var $document = $(document);\n            $document.on('dragleave drop dragenter dragover', function (e) {\n                e.preventDefault();\n            });\n\n            // 添加编辑区域拖拽事件\n            var $textElem = editor.$textElem;\n            $textElem.on('drop', function (e) {\n                e.preventDefault();\n                var files = e.dataTransfer && e.dataTransfer.files;\n                if (!files || !files.length) {\n                    return;\n                }\n\n                // 上传图片\n                var uploadImg = editor.uploadImg;\n                uploadImg.uploadImg(files);\n            });\n        }\n    }]);\n    return Text;\n}();\n\n/*\r\n    命令，封装 document.execCommand\r\n*/\n\nvar Command = function () {\n    function Command(editor) {\n        classCallCheck(this, Command);\n\n        this.editor = editor;\n    }\n\n    // 执行命令\n\n\n    createClass(Command, [{\n        key: 'do',\n        value: function _do(name, value) {\n            var editor = this.editor;\n\n            // 使用 styleWithCSS\n            if (!editor._useStyleWithCSS) {\n                document.execCommand('styleWithCSS', null, true);\n                editor._useStyleWithCSS = true;\n            }\n\n            // 如果无选区，忽略\n            if (!editor.selection.getRange()) {\n                return;\n            }\n\n            // 恢复选取\n            editor.selection.restoreSelection();\n\n            // 执行\n            var _name = '_' + name;\n            if (this[_name]) {\n                // 有自定义事件\n                this[_name](value);\n            } else {\n                // 默认 command\n                this._execCommand(name, value);\n            }\n\n            // 修改菜单状态\n            editor.menus.changeActive();\n\n            // 最后，恢复选取保证光标在原来的位置闪烁\n            editor.selection.saveRange();\n            editor.selection.restoreSelection();\n\n            // 触发 onchange\n            editor.change && editor.change();\n        }\n\n        // 自定义 insertHTML 事件\n\n    }, {\n        key: '_insertHTML',\n        value: function _insertHTML(html) {\n            var editor = this.editor;\n            var range = editor.selection.getRange();\n\n            if (this.queryCommandSupported('insertHTML')) {\n                // W3C\n                this._execCommand('insertHTML', html);\n            } else if (range.insertNode) {\n                // IE\n                range.deleteContents();\n                range.insertNode($(html)[0]);\n            } else if (range.pasteHTML) {\n                // IE <= 10\n                range.pasteHTML(html);\n            }\n        }\n\n        // 插入 elem\n\n    }, {\n        key: '_insertElem',\n        value: function _insertElem($elem) {\n            var editor = this.editor;\n            var range = editor.selection.getRange();\n\n            if (range.insertNode) {\n                range.deleteContents();\n                range.insertNode($elem[0]);\n            }\n        }\n\n        // 封装 execCommand\n\n    }, {\n        key: '_execCommand',\n        value: function _execCommand(name, value) {\n            document.execCommand(name, false, value);\n        }\n\n        // 封装 document.queryCommandValue\n\n    }, {\n        key: 'queryCommandValue',\n        value: function queryCommandValue(name) {\n            return document.queryCommandValue(name);\n        }\n\n        // 封装 document.queryCommandState\n\n    }, {\n        key: 'queryCommandState',\n        value: function queryCommandState(name) {\n            return document.queryCommandState(name);\n        }\n\n        // 封装 document.queryCommandSupported\n\n    }, {\n        key: 'queryCommandSupported',\n        value: function queryCommandSupported(name) {\n            return document.queryCommandSupported(name);\n        }\n    }]);\n    return Command;\n}();\n\n/*\r\n    selection range API\r\n*/\n\nvar API = function () {\n    function API(editor) {\n        classCallCheck(this, API);\n\n        this.editor = editor;\n        this._currentRange = null;\n    }\n\n    // 获取 range 对象\n\n\n    createClass(API, [{\n        key: 'getRange',\n        value: function getRange() {\n            return this._currentRange;\n        }\n\n        // 保存选区\n\n    }, {\n        key: 'saveRange',\n        value: function saveRange(_range) {\n            if (_range) {\n                // 保存已有选区\n                this._currentRange = _range;\n                return;\n            }\n\n            // 获取当前的选区\n            var selection = window.getSelection();\n            if (selection.rangeCount === 0) {\n                return;\n            }\n            var range = selection.getRangeAt(0);\n\n            // 判断选区内容是否在编辑内容之内\n            var $containerElem = this.getSelectionContainerElem(range);\n            if (!$containerElem) {\n                return;\n            }\n\n            // 判断选区内容是否在不可编辑区域之内\n            if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n                return;\n            }\n\n            var editor = this.editor;\n            var $textElem = editor.$textElem;\n            if ($textElem.isContain($containerElem)) {\n                // 是编辑内容之内的\n                this._currentRange = range;\n            }\n        }\n\n        // 折叠选区\n\n    }, {\n        key: 'collapseRange',\n        value: function collapseRange(toStart) {\n            if (toStart == null) {\n                // 默认为 false\n                toStart = false;\n            }\n            var range = this._currentRange;\n            if (range) {\n                range.collapse(toStart);\n            }\n        }\n\n        // 选中区域的文字\n\n    }, {\n        key: 'getSelectionText',\n        value: function getSelectionText() {\n            var range = this._currentRange;\n            if (range) {\n                return this._currentRange.toString();\n            } else {\n                return '';\n            }\n        }\n\n        // 选区的 $Elem\n\n    }, {\n        key: 'getSelectionContainerElem',\n        value: function getSelectionContainerElem(range) {\n            range = range || this._currentRange;\n            var elem = void 0;\n            if (range) {\n                elem = range.commonAncestorContainer;\n                return $(elem.nodeType === 1 ? elem : elem.parentNode);\n            }\n        }\n    }, {\n        key: 'getSelectionStartElem',\n        value: function getSelectionStartElem(range) {\n            range = range || this._currentRange;\n            var elem = void 0;\n            if (range) {\n                elem = range.startContainer;\n                return $(elem.nodeType === 1 ? elem : elem.parentNode);\n            }\n        }\n    }, {\n        key: 'getSelectionEndElem',\n        value: function getSelectionEndElem(range) {\n            range = range || this._currentRange;\n            var elem = void 0;\n            if (range) {\n                elem = range.endContainer;\n                return $(elem.nodeType === 1 ? elem : elem.parentNode);\n            }\n        }\n\n        // 选区是否为空\n\n    }, {\n        key: 'isSelectionEmpty',\n        value: function isSelectionEmpty() {\n            var range = this._currentRange;\n            if (range && range.startContainer) {\n                if (range.startContainer === range.endContainer) {\n                    if (range.startOffset === range.endOffset) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        // 恢复选区\n\n    }, {\n        key: 'restoreSelection',\n        value: function restoreSelection() {\n            var selection = window.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(this._currentRange);\n        }\n\n        // 创建一个空白（即 &#8203 字符）选区\n\n    }, {\n        key: 'createEmptyRange',\n        value: function createEmptyRange() {\n            var editor = this.editor;\n            var range = this.getRange();\n            var $elem = void 0;\n\n            if (!range) {\n                // 当前无 range\n                return;\n            }\n            if (!this.isSelectionEmpty()) {\n                // 当前选区必须没有内容才可以\n                return;\n            }\n\n            try {\n                // 目前只支持 webkit 内核\n                if (UA.isWebkit()) {\n                    // 插入 &#8203\n                    editor.cmd.do('insertHTML', '&#8203;');\n                    // 修改 offset 位置\n                    range.setEnd(range.endContainer, range.endOffset + 1);\n                    // 存储\n                    this.saveRange(range);\n                } else {\n                    $elem = $('<strong>&#8203;</strong>');\n                    editor.cmd.do('insertElem', $elem);\n                    this.createRangeByElem($elem, true);\n                }\n            } catch (ex) {\n                // 部分情况下会报错，兼容一下\n            }\n        }\n\n        // 根据 $Elem 设置选区\n\n    }, {\n        key: 'createRangeByElem',\n        value: function createRangeByElem($elem, toStart, isContent) {\n            // $elem - 经过封装的 elem\n            // toStart - true 开始位置，false 结束位置\n            // isContent - 是否选中Elem的内容\n            if (!$elem.length) {\n                return;\n            }\n\n            var elem = $elem[0];\n            var range = document.createRange();\n\n            if (isContent) {\n                range.selectNodeContents(elem);\n            } else {\n                range.selectNode(elem);\n            }\n\n            if (typeof toStart === 'boolean') {\n                range.collapse(toStart);\n            }\n\n            // 存储 range\n            this.saveRange(range);\n        }\n    }]);\n    return API;\n}();\n\n/*\r\n    上传进度条\r\n*/\n\nvar Progress = function () {\n    function Progress(editor) {\n        classCallCheck(this, Progress);\n\n        this.editor = editor;\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n        this._timeoutId = 0;\n        this.$textContainer = editor.$textContainerElem;\n        this.$bar = $('<div class=\"w-e-progress\"></div>');\n    }\n\n    createClass(Progress, [{\n        key: 'show',\n        value: function show(progress) {\n            var _this = this;\n\n            // 状态处理\n            if (this._isShow) {\n                return;\n            }\n            this._isShow = true;\n\n            // 渲染\n            var $bar = this.$bar;\n            if (!this._isRender) {\n                var $textContainer = this.$textContainer;\n                $textContainer.append($bar);\n            } else {\n                this._isRender = true;\n            }\n\n            // 改变进度（节流，100ms 渲染一次）\n            if (Date.now() - this._time > 100) {\n                if (progress <= 1) {\n                    $bar.css('width', progress * 100 + '%');\n                    this._time = Date.now();\n                }\n            }\n\n            // 隐藏\n            var timeoutId = this._timeoutId;\n            if (timeoutId) {\n                clearTimeout(timeoutId);\n            }\n            setTimeout(function () {\n                _this._hide();\n            }, 500);\n        }\n    }, {\n        key: '_hide',\n        value: function _hide() {\n            var $bar = this.$bar;\n            $bar.remove();\n\n            // 修改状态\n            this._time = 0;\n            this._isShow = false;\n            this._isRender = false;\n        }\n    }]);\n    return Progress;\n}();\n\n/*\r\n    上传图片\r\n*/\n\nvar UploadImg = function () {\n    function UploadImg(editor) {\n        classCallCheck(this, UploadImg);\n\n        this.editor = editor;\n    }\n\n    // 根据 debug 弹出不同的信息\n\n\n    createClass(UploadImg, [{\n        key: '_alert',\n        value: function _alert(alertInfo, debugInfo) {\n            var editor = this.editor;\n            var debug = editor.config.debug;\n            var customAlert = editor.config.customAlert;\n\n            if (debug) {\n                throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n            } else {\n                if (isFunction(customAlert)) {\n                    customAlert(alertInfo);\n                } else {\n                    alert(alertInfo);\n                }\n            }\n        }\n\n        // 根据链接插入图片\n\n    }, {\n        key: 'insertLinkImg',\n        value: function insertLinkImg(link) {\n            var _this2 = this;\n\n            if (!link) {\n                return;\n            }\n            var editor = this.editor;\n            var config = editor.config;\n\n            // 校验格式\n            var linkImgCheck = config.linkImgCheck;\n            var checkResult = void 0;\n            if (isFunction(linkImgCheck)) {\n                checkResult = linkImgCheck(link);\n                if (typeof checkResult === 'string') {\n                    // 校验失败，提示信息\n                    alert(checkResult);\n                    return;\n                }\n            }\n\n            editor.cmd.do('insertHTML', '<img alt=\"\\u56FE\\u7247\" src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n            // 验证图片 url 是否有效，无效的话给出提示\n            var img = document.createElement('img');\n            img.onload = function () {\n                var callback = config.linkImgCallback;\n                if (isFunction(callback)) {\n                    callback(link);\n                }\n\n                img = null;\n            };\n            img.onerror = function () {\n                img = null;\n                // 无法成功下载图片\n                _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            };\n            img.onabort = function () {\n                img = null;\n            };\n            img.src = link;\n        }\n\n        // 上传图片\n\n    }, {\n        key: 'uploadImg',\n        value: function uploadImg(files) {\n            var _this3 = this;\n\n            if (!files || !files.length) {\n                return;\n            }\n\n            // ------------------------------ 获取配置信息 ------------------------------\n            var editor = this.editor;\n            var config = editor.config;\n            var uploadImgServer = config.uploadImgServer;\n            var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n            var maxSize = config.uploadImgMaxSize;\n            var maxSizeM = maxSize / 1024 / 1024;\n            var maxLength = config.uploadImgMaxLength || 10000;\n            var uploadFileName = config.uploadFileName || '';\n            var uploadImgParams = config.uploadImgParams || {};\n            var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n            var uploadImgHeaders = config.uploadImgHeaders || {};\n            var hooks = config.uploadImgHooks || {};\n            var timeout = config.uploadImgTimeout || 3000;\n            var withCredentials = config.withCredentials;\n            if (withCredentials == null) {\n                withCredentials = false;\n            }\n            var customUploadImg = config.customUploadImg;\n\n            if (!customUploadImg) {\n                // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n                if (!uploadImgServer && !uploadImgShowBase64) {\n                    return;\n                }\n            }\n\n            // ------------------------------ 验证文件信息 ------------------------------\n            var resultFiles = [];\n            var errInfo = [];\n            arrForEach(files, function (file) {\n                var name = file.name;\n                var size = file.size;\n\n                // chrome 低版本 name === undefined\n                if (!name || !size) {\n                    return;\n                }\n\n                if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                    // 后缀名不合法，不是图片\n                    errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                    return;\n                }\n                if (maxSize < size) {\n                    // 上传图片过大\n                    errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                    return;\n                }\n\n                // 验证通过的加入结果列表\n                resultFiles.push(file);\n            });\n            // 抛出验证信息\n            if (errInfo.length) {\n                this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n                return;\n            }\n            if (resultFiles.length > maxLength) {\n                this._alert('一次最多上传' + maxLength + '张图片');\n                return;\n            }\n\n            // ------------------------------ 自定义上传 ------------------------------\n            if (isFunction(customUploadImg)) {\n                customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n                // 阻止以下代码执行\n                return;\n            }\n\n            // 添加图片数据\n            var formdata = new FormData();\n            arrForEach(resultFiles, function (file) {\n                var name = uploadFileName || file.name;\n                formdata.append(name, file);\n            });\n\n            // ------------------------------ 上传图片 ------------------------------\n            if (uploadImgServer && typeof uploadImgServer === 'string') {\n                // 添加参数\n                var uploadImgServerArr = uploadImgServer.split('#');\n                uploadImgServer = uploadImgServerArr[0];\n                var uploadImgServerHash = uploadImgServerArr[1] || '';\n                objForEach(uploadImgParams, function (key, val) {\n                    // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                    // val = encodeURIComponent(val)\n\n                    // 第一，将参数拼接到 url 中\n                    if (uploadImgParamsWithUrl) {\n                        if (uploadImgServer.indexOf('?') > 0) {\n                            uploadImgServer += '&';\n                        } else {\n                            uploadImgServer += '?';\n                        }\n                        uploadImgServer = uploadImgServer + key + '=' + val;\n                    }\n\n                    // 第二，将参数添加到 formdata 中\n                    formdata.append(key, val);\n                });\n                if (uploadImgServerHash) {\n                    uploadImgServer += '#' + uploadImgServerHash;\n                }\n\n                // 定义 xhr\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', uploadImgServer);\n\n                // 设置超时\n                xhr.timeout = timeout;\n                xhr.ontimeout = function () {\n                    // hook - timeout\n                    if (isFunction(hooks.timeout)) {\n                        hooks.timeout(xhr, editor);\n                    }\n\n                    _this3._alert('上传图片超时');\n                };\n\n                // 监控 progress\n                if (xhr.upload) {\n                    xhr.upload.onprogress = function (e) {\n                        var percent = void 0;\n                        // 进度条\n                        var progressBar = new Progress(editor);\n                        if (e.lengthComputable) {\n                            percent = e.loaded / e.total;\n                            progressBar.show(percent);\n                        }\n                    };\n                }\n\n                // 返回数据\n                xhr.onreadystatechange = function () {\n                    var result = void 0;\n                    if (xhr.readyState === 4) {\n                        if (xhr.status < 200 || xhr.status >= 300) {\n                            // hook - error\n                            if (isFunction(hooks.error)) {\n                                hooks.error(xhr, editor);\n                            }\n\n                            // xhr 返回状态错误\n                            _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                            return;\n                        }\n\n                        result = xhr.responseText;\n                        if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                            try {\n                                result = JSON.parse(result);\n                            } catch (ex) {\n                                // hook - fail\n                                if (isFunction(hooks.fail)) {\n                                    hooks.fail(xhr, editor, result);\n                                }\n\n                                _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                                return;\n                            }\n                        }\n                        if (!hooks.customInsert && result.errno !== '0') {\n                            // hook - fail\n                            if (isFunction(hooks.fail)) {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            // 数据错误\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                        } else {\n                            if (isFunction(hooks.customInsert)) {\n                                // 使用者自定义插入方法\n                                hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                            } else {\n                                // 将图片插入编辑器\n                                var data = result.data || [];\n                                data.forEach(function (link) {\n                                    _this3.insertLinkImg(link);\n                                });\n                            }\n\n                            // hook - success\n                            if (isFunction(hooks.success)) {\n                                hooks.success(xhr, editor, result);\n                            }\n                        }\n                    }\n                };\n\n                // hook - before\n                if (isFunction(hooks.before)) {\n                    var beforeResult = hooks.before(xhr, editor, resultFiles);\n                    if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                        if (beforeResult.prevent) {\n                            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                            this._alert(beforeResult.msg);\n                            return;\n                        }\n                    }\n                }\n\n                // 自定义 headers\n                objForEach(uploadImgHeaders, function (key, val) {\n                    xhr.setRequestHeader(key, val);\n                });\n\n                // 跨域传 cookie\n                xhr.withCredentials = withCredentials;\n\n                // 发送请求\n                xhr.send(formdata);\n\n                // 注意，要 return 。不去操作接下来的 base64 显示方式\n                return;\n            }\n\n            // ------------------------------ 显示 base64 格式 ------------------------------\n            if (uploadImgShowBase64) {\n                arrForEach(files, function (file) {\n                    var _this = _this3;\n                    var reader = new FileReader();\n                    reader.readAsDataURL(file);\n                    reader.onload = function () {\n                        _this.insertLinkImg(_this3.result);\n                    };\n                });\n            }\n        }\n    }]);\n    return UploadImg;\n}();\n\n/*\r\n    编辑器构造函数\r\n*/\n\n// id，累加\nvar editorId = 1;\n\nvar Editor = function () {\n    // 构造函数\n    function Editor(toolbarSelector, textSelector) {\n        classCallCheck(this, Editor);\n\n        if (toolbarSelector == null) {\n            // 没有传入任何参数，报错\n            throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n        }\n        // id，用以区分单个页面不同的编辑器对象\n        this.id = 'wangEditor-' + editorId++;\n\n        this.toolbarSelector = toolbarSelector;\n        this.textSelector = textSelector;\n\n        // 自定义配置\n        this.customConfig = {};\n    }\n\n    // 初始化配置\n\n\n    createClass(Editor, [{\n        key: '_initConfig',\n        value: function _initConfig() {\n            // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n            var target = {};\n            this.config = Object.assign(target, config, this.customConfig);\n\n            // 将语言配置，生成正则表达式\n            var langConfig = this.config.lang || {};\n            var langArgs = [];\n            objForEach(langConfig, function (key, val) {\n                // key 即需要生成正则表达式的规则，如“插入链接”\n                // val 即需要被替换成的语言，如“insert link”\n                langArgs.push({\n                    reg: new RegExp(key, 'img'),\n                    val: val\n\n                });\n            });\n            this.config.langArgs = langArgs;\n        }\n\n        // 初始化 DOM\n\n    }, {\n        key: '_initDom',\n        value: function _initDom() {\n            var _this = this;\n\n            var toolbarSelector = this.toolbarSelector;\n            var $toolbarSelector = $(toolbarSelector);\n            var textSelector = this.textSelector;\n\n            var config$$1 = this.config;\n            var zIndex = config$$1.zIndex;\n\n            // 定义变量\n            var $toolbarElem = void 0,\n                $textContainerElem = void 0,\n                $textElem = void 0,\n                $children = void 0;\n\n            if (textSelector == null) {\n                // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n                $toolbarElem = $('<div></div>');\n                $textContainerElem = $('<div></div>');\n\n                // 将编辑器区域原有的内容，暂存起来\n                $children = $toolbarSelector.children();\n\n                // 添加到 DOM 结构中\n                $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n                // 自行创建的，需要配置默认的样式\n                $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n                $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n            } else {\n                // toolbar 和 text 的选择器都有值，记录属性\n                $toolbarElem = $toolbarSelector;\n                $textContainerElem = $(textSelector);\n                // 将编辑器区域原有的内容，暂存起来\n                $children = $textContainerElem.children();\n            }\n\n            // 编辑区域\n            $textElem = $('<div></div>');\n            $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n            // 初始化编辑区域内容\n            if ($children && $children.length) {\n                $textElem.append($children);\n            } else {\n                $textElem.append($('<p><br></p>'));\n            }\n\n            // 编辑区域加入DOM\n            $textContainerElem.append($textElem);\n\n            // 设置通用的 class\n            $toolbarElem.addClass('w-e-toolbar');\n            $textContainerElem.addClass('w-e-text-container');\n            $textContainerElem.css('z-index', zIndex);\n            $textElem.addClass('w-e-text');\n\n            // 添加 ID\n            var toolbarElemId = getRandom('toolbar-elem');\n            $toolbarElem.attr('id', toolbarElemId);\n            var textElemId = getRandom('text-elem');\n            $textElem.attr('id', textElemId);\n\n            // 记录属性\n            this.$toolbarElem = $toolbarElem;\n            this.$textContainerElem = $textContainerElem;\n            this.$textElem = $textElem;\n            this.toolbarElemId = toolbarElemId;\n            this.textElemId = textElemId;\n\n            // 记录输入法的开始和结束\n            var compositionEnd = true;\n            $textContainerElem.on('compositionstart', function () {\n                // 输入法开始输入\n                compositionEnd = false;\n            });\n            $textContainerElem.on('compositionend', function () {\n                // 输入法结束输入\n                compositionEnd = true;\n            });\n\n            // 绑定 onchange\n            $textContainerElem.on('click keyup', function () {\n                // 输入法结束才出发 onchange\n                compositionEnd && _this.change && _this.change();\n            });\n            $toolbarElem.on('click', function () {\n                _this.change && _this.change();\n            });\n\n            //绑定 onfocus 与 onblur 事件\n            if (config$$1.onfocus || config$$1.onblur) {\n                // 当前编辑器是否是焦点状态\n                this.isFocus = false;\n\n                $(document).on('click', function (e) {\n                    //判断当前点击元素是否在编辑器内\n                    var isChild = $textElem.isContain($(e.target));\n\n                    //判断当前点击元素是否为工具栏\n                    var isToolbar = $toolbarElem.isContain($(e.target));\n                    var isMenu = $toolbarElem[0] === e.target;\n\n                    if (!isChild) {\n                        //若为选择工具栏中的功能，则不视为成blur操作\n                        if (isToolbar && !isMenu) {\n                            return;\n                        }\n\n                        if (_this.isFocus) {\n                            _this.onblur && _this.onblur();\n                        }\n                        _this.isFocus = false;\n                    } else {\n                        if (!_this.isFocus) {\n                            _this.onfocus && _this.onfocus();\n                        }\n                        _this.isFocus = true;\n                    }\n                });\n            }\n        }\n\n        // 封装 command\n\n    }, {\n        key: '_initCommand',\n        value: function _initCommand() {\n            this.cmd = new Command(this);\n        }\n\n        // 封装 selection range API\n\n    }, {\n        key: '_initSelectionAPI',\n        value: function _initSelectionAPI() {\n            this.selection = new API(this);\n        }\n\n        // 添加图片上传\n\n    }, {\n        key: '_initUploadImg',\n        value: function _initUploadImg() {\n            this.uploadImg = new UploadImg(this);\n        }\n\n        // 初始化菜单\n\n    }, {\n        key: '_initMenus',\n        value: function _initMenus() {\n            this.menus = new Menus(this);\n            this.menus.init();\n        }\n\n        // 添加 text 区域\n\n    }, {\n        key: '_initText',\n        value: function _initText() {\n            this.txt = new Text(this);\n            this.txt.init();\n        }\n\n        // 初始化选区，将光标定位到内容尾部\n\n    }, {\n        key: 'initSelection',\n        value: function initSelection(newLine) {\n            var $textElem = this.$textElem;\n            var $children = $textElem.children();\n            if (!$children.length) {\n                // 如果编辑器区域无内容，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n\n            var $last = $children.last();\n\n            if (newLine) {\n                // 新增一个空行\n                var html = $last.html().toLowerCase();\n                var nodeName = $last.getNodeName();\n                if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                    // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                    $textElem.append($('<p><br></p>'));\n                    this.initSelection();\n                    return;\n                }\n            }\n\n            this.selection.createRangeByElem($last, false, true);\n            this.selection.restoreSelection();\n        }\n\n        // 绑定事件\n\n    }, {\n        key: '_bindEvent',\n        value: function _bindEvent() {\n            var _this2 = this;\n\n            // -------- 绑定 onchange 事件 --------\n            var onChangeTimeoutId = 0;\n            var beforeChangeHtml = this.txt.html();\n            var config$$1 = this.config;\n\n            // onchange 触发延迟时间\n            var onchangeTimeout = config$$1.onchangeTimeout;\n            onchangeTimeout = parseInt(onchangeTimeout, 10);\n            if (!onchangeTimeout || onchangeTimeout <= 0) {\n                onchangeTimeout = 200;\n            }\n\n            var onchange = config$$1.onchange;\n            if (isFunction(onchange)) {\n                // 触发 change 的有三个场景：\n                // 1. $textContainerElem.on('click keyup')\n                // 2. $toolbarElem.on('click')\n                // 3. editor.cmd.do()\n                this.change = function () {\n                    // 判断是否有变化\n                    var currentHtml = _this2.txt.html();\n\n                    if (currentHtml.length === beforeChangeHtml.length) {\n                        // 需要比较每一个字符\n                        if (currentHtml === beforeChangeHtml) {\n                            return;\n                        }\n                    }\n\n                    // 执行，使用节流\n                    if (onChangeTimeoutId) {\n                        clearTimeout(onChangeTimeoutId);\n                    }\n                    onChangeTimeoutId = setTimeout(function () {\n                        // 触发配置的 onchange 函数\n                        onchange(currentHtml);\n                        beforeChangeHtml = currentHtml;\n                    }, onchangeTimeout);\n                };\n            }\n\n            // -------- 绑定 onblur 事件 --------\n            var onblur = config$$1.onblur;\n            if (isFunction(onblur)) {\n                this.onblur = function () {\n                    var currentHtml = _this2.txt.html();\n                    onblur(currentHtml);\n                };\n            }\n\n            // -------- 绑定 onfocus 事件 --------\n            var onfocus = config$$1.onfocus;\n            if (isFunction(onfocus)) {\n                this.onfocus = onfocus;\n            }\n        }\n\n        // 创建编辑器\n\n    }, {\n        key: 'create',\n        value: function create() {\n            // 初始化配置信息\n            this._initConfig();\n\n            // 初始化 DOM\n            this._initDom();\n\n            // 封装 command API\n            this._initCommand();\n\n            // 封装 selection range API\n            this._initSelectionAPI();\n\n            // 添加 text\n            this._initText();\n\n            // 初始化菜单\n            this._initMenus();\n\n            // 添加 图片上传\n            this._initUploadImg();\n\n            // 初始化选区，将光标定位到内容尾部\n            this.initSelection(true);\n\n            // 绑定事件\n            this._bindEvent();\n        }\n\n        // 解绑所有事件（暂时不对外开放）\n\n    }, {\n        key: '_offAllEvent',\n        value: function _offAllEvent() {\n            $.offAll();\n        }\n    }]);\n    return Editor;\n}();\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n"]}